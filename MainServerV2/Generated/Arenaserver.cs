// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: arenaserver.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ArenaServer {

  /// <summary>Holder for reflection information generated from arenaserver.proto</summary>
  public static partial class ArenaserverReflection {

    #region Descriptor
    /// <summary>File descriptor for arenaserver.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArenaserverReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFhcmVuYXNlcnZlci5wcm90bxILQXJlbmFTZXJ2ZXIaEm1haW5zZXJ2ZXJ2",
            "Mi5wcm90byJTCgpQbGF5ZXJJbmZvEhIKCmF1dGhfdG9rZW4YASABKAwSMQoK",
            "YmFzaWNfaW5mbxgCIAEoCzIdLk1haW5TZXJ2ZXJWMi5CYXNpY1BsYXllcklu",
            "Zm8iQgoSQ3JlYXRlQXJlbmFBdHRlbXB0EiwKC3BsYXllcl9pbmZvGAEgAygL",
            "MhcuQXJlbmFTZXJ2ZXIuUGxheWVySW5mbyJ9ChFDcmVhdGVBcmVuYVJlc3Vs",
            "dBIPCgdzdWNjZXNzGAEgASgIEhgKEGZyZWVfYXJlbmFfY291bnQYAiABKAUS",
            "HgoWcHJpdmF0ZV9jb25uZWN0aW9uX3N0chgDIAEoCRIdChVwdWJsaWNfY29u",
            "bmVjdGlvbl9zdHIYBCABKAkiEQoPU2h1dGRvd25BdHRlbXB0IhAKDlNodXRk",
            "b3duUmVzdWx0IhUKE1N1YnNjcmlwdGlvbkF0dGVtcHQijQEKC0V2ZW50X0Fy",
            "ZW5hEjkKC3BsYXllcl9sZWZ0GAEgASgLMiIuQXJlbmFTZXJ2ZXIuRXZlbnRB",
            "cmVuYV9QbGF5ZXJMZWZ0SAASOgoOYXJlbmFfc2h1dGRvd24YAiABKAsyIC5B",
            "cmVuYVNlcnZlci5FdmVudEFyZW5hX1NodXRkb3duSABCBwoFZXZlbnQiKgoV",
            "RXZlbnRBcmVuYV9QbGF5ZXJMZWZ0EhEKCXBsYXllcl9pZBgBIAEoAyIVChNF",
            "dmVudEFyZW5hX1NodXRkb3duIigKE1JlbW92ZVBsYXllckF0dGVtcHQSEQoJ",
            "cGxheWVyX2lkGAEgASgDIigKElJlbW92ZVBsYXllclJlc3VsdBISCgppc19y",
            "ZW1vdmVkGAEgASgIMrQBChdBcmVuYUhvc3RTZXJ2aWNlUHJpdmF0ZRJQCgtD",
            "cmVhdGVBcmVuYRIfLkFyZW5hU2VydmVyLkNyZWF0ZUFyZW5hQXR0ZW1wdBoe",
            "LkFyZW5hU2VydmVyLkNyZWF0ZUFyZW5hUmVzdWx0IgASRwoIU2h1dGRvd24S",
            "HC5BcmVuYVNlcnZlci5TaHV0ZG93bkF0dGVtcHQaGy5BcmVuYVNlcnZlci5T",
            "aHV0ZG93blJlc3VsdCIAMrcBChNBcmVuYVNlcnZpY2VQcml2YXRlEksKCVN1",
            "YnNjcmliZRIgLkFyZW5hU2VydmVyLlN1YnNjcmlwdGlvbkF0dGVtcHQaGC5B",
            "cmVuYVNlcnZlci5FdmVudF9BcmVuYSIAMAESUwoMUmVtb3ZlUGxheWVyEiAu",
            "QXJlbmFTZXJ2ZXIuUmVtb3ZlUGxheWVyQXR0ZW1wdBofLkFyZW5hU2VydmVy",
            "LlJlbW92ZVBsYXllclJlc3VsdCIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::MainServerV2.Mainserverv2Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.PlayerInfo), global::ArenaServer.PlayerInfo.Parser, new[]{ "AuthToken", "BasicInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.CreateArenaAttempt), global::ArenaServer.CreateArenaAttempt.Parser, new[]{ "PlayerInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.CreateArenaResult), global::ArenaServer.CreateArenaResult.Parser, new[]{ "Success", "FreeArenaCount", "PrivateConnectionStr", "PublicConnectionStr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.ShutdownAttempt), global::ArenaServer.ShutdownAttempt.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.ShutdownResult), global::ArenaServer.ShutdownResult.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.SubscriptionAttempt), global::ArenaServer.SubscriptionAttempt.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.Event_Arena), global::ArenaServer.Event_Arena.Parser, new[]{ "PlayerLeft", "ArenaShutdown" }, new[]{ "Event" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.EventArena_PlayerLeft), global::ArenaServer.EventArena_PlayerLeft.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.EventArena_Shutdown), global::ArenaServer.EventArena_Shutdown.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.RemovePlayerAttempt), global::ArenaServer.RemovePlayerAttempt.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArenaServer.RemovePlayerResult), global::ArenaServer.RemovePlayerResult.Parser, new[]{ "IsRemoved" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      authToken_ = other.authToken_;
      BasicInfo = other.basicInfo_ != null ? other.BasicInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 1;
    private pb::ByteString authToken_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "basic_info" field.</summary>
    public const int BasicInfoFieldNumber = 2;
    private global::MainServerV2.BasicPlayerInfo basicInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo BasicInfo {
      get { return basicInfo_; }
      set {
        basicInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthToken != other.AuthToken) return false;
      if (!object.Equals(BasicInfo, other.BasicInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (basicInfo_ != null) hash ^= BasicInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AuthToken);
      }
      if (basicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BasicInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthToken);
      }
      if (basicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      if (other.basicInfo_ != null) {
        if (basicInfo_ == null) {
          basicInfo_ = new global::MainServerV2.BasicPlayerInfo();
        }
        BasicInfo.MergeFrom(other.BasicInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthToken = input.ReadBytes();
            break;
          }
          case 18: {
            if (basicInfo_ == null) {
              basicInfo_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(basicInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateArenaAttempt : pb::IMessage<CreateArenaAttempt> {
    private static readonly pb::MessageParser<CreateArenaAttempt> _parser = new pb::MessageParser<CreateArenaAttempt>(() => new CreateArenaAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateArenaAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateArenaAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateArenaAttempt(CreateArenaAttempt other) : this() {
      playerInfo_ = other.playerInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateArenaAttempt Clone() {
      return new CreateArenaAttempt(this);
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ArenaServer.PlayerInfo> _repeated_playerInfo_codec
        = pb::FieldCodec.ForMessage(10, global::ArenaServer.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::ArenaServer.PlayerInfo> playerInfo_ = new pbc::RepeatedField<global::ArenaServer.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ArenaServer.PlayerInfo> PlayerInfo {
      get { return playerInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateArenaAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateArenaAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerInfo_.Equals(other.playerInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      playerInfo_.WriteTo(output, _repeated_playerInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerInfo_.CalculateSize(_repeated_playerInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateArenaAttempt other) {
      if (other == null) {
        return;
      }
      playerInfo_.Add(other.playerInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerInfo_.AddEntriesFrom(input, _repeated_playerInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateArenaResult : pb::IMessage<CreateArenaResult> {
    private static readonly pb::MessageParser<CreateArenaResult> _parser = new pb::MessageParser<CreateArenaResult>(() => new CreateArenaResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateArenaResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateArenaResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateArenaResult(CreateArenaResult other) : this() {
      success_ = other.success_;
      freeArenaCount_ = other.freeArenaCount_;
      privateConnectionStr_ = other.privateConnectionStr_;
      publicConnectionStr_ = other.publicConnectionStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateArenaResult Clone() {
      return new CreateArenaResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "free_arena_count" field.</summary>
    public const int FreeArenaCountFieldNumber = 2;
    private int freeArenaCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeArenaCount {
      get { return freeArenaCount_; }
      set {
        freeArenaCount_ = value;
      }
    }

    /// <summary>Field number for the "private_connection_str" field.</summary>
    public const int PrivateConnectionStrFieldNumber = 3;
    private string privateConnectionStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateConnectionStr {
      get { return privateConnectionStr_; }
      set {
        privateConnectionStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_connection_str" field.</summary>
    public const int PublicConnectionStrFieldNumber = 4;
    private string publicConnectionStr_ = "";
    /// <summary>
    ///TODO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicConnectionStr {
      get { return publicConnectionStr_; }
      set {
        publicConnectionStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateArenaResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateArenaResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (FreeArenaCount != other.FreeArenaCount) return false;
      if (PrivateConnectionStr != other.PrivateConnectionStr) return false;
      if (PublicConnectionStr != other.PublicConnectionStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (FreeArenaCount != 0) hash ^= FreeArenaCount.GetHashCode();
      if (PrivateConnectionStr.Length != 0) hash ^= PrivateConnectionStr.GetHashCode();
      if (PublicConnectionStr.Length != 0) hash ^= PublicConnectionStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (FreeArenaCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FreeArenaCount);
      }
      if (PrivateConnectionStr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrivateConnectionStr);
      }
      if (PublicConnectionStr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PublicConnectionStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (FreeArenaCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeArenaCount);
      }
      if (PrivateConnectionStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateConnectionStr);
      }
      if (PublicConnectionStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicConnectionStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateArenaResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.FreeArenaCount != 0) {
        FreeArenaCount = other.FreeArenaCount;
      }
      if (other.PrivateConnectionStr.Length != 0) {
        PrivateConnectionStr = other.PrivateConnectionStr;
      }
      if (other.PublicConnectionStr.Length != 0) {
        PublicConnectionStr = other.PublicConnectionStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 16: {
            FreeArenaCount = input.ReadInt32();
            break;
          }
          case 26: {
            PrivateConnectionStr = input.ReadString();
            break;
          }
          case 34: {
            PublicConnectionStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShutdownAttempt : pb::IMessage<ShutdownAttempt> {
    private static readonly pb::MessageParser<ShutdownAttempt> _parser = new pb::MessageParser<ShutdownAttempt>(() => new ShutdownAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownAttempt(ShutdownAttempt other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownAttempt Clone() {
      return new ShutdownAttempt(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownAttempt other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ShutdownResult : pb::IMessage<ShutdownResult> {
    private static readonly pb::MessageParser<ShutdownResult> _parser = new pb::MessageParser<ShutdownResult>(() => new ShutdownResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResult(ShutdownResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResult Clone() {
      return new ShutdownResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SubscriptionAttempt : pb::IMessage<SubscriptionAttempt> {
    private static readonly pb::MessageParser<SubscriptionAttempt> _parser = new pb::MessageParser<SubscriptionAttempt>(() => new SubscriptionAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionAttempt(SubscriptionAttempt other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionAttempt Clone() {
      return new SubscriptionAttempt(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionAttempt other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Event_Arena : pb::IMessage<Event_Arena> {
    private static readonly pb::MessageParser<Event_Arena> _parser = new pb::MessageParser<Event_Arena>(() => new Event_Arena());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_Arena> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_Arena() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_Arena(Event_Arena other) : this() {
      switch (other.EventCase) {
        case EventOneofCase.PlayerLeft:
          PlayerLeft = other.PlayerLeft.Clone();
          break;
        case EventOneofCase.ArenaShutdown:
          ArenaShutdown = other.ArenaShutdown.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_Arena Clone() {
      return new Event_Arena(this);
    }

    /// <summary>Field number for the "player_left" field.</summary>
    public const int PlayerLeftFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArenaServer.EventArena_PlayerLeft PlayerLeft {
      get { return eventCase_ == EventOneofCase.PlayerLeft ? (global::ArenaServer.EventArena_PlayerLeft) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PlayerLeft;
      }
    }

    /// <summary>Field number for the "arena_shutdown" field.</summary>
    public const int ArenaShutdownFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArenaServer.EventArena_Shutdown ArenaShutdown {
      get { return eventCase_ == EventOneofCase.ArenaShutdown ? (global::ArenaServer.EventArena_Shutdown) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.ArenaShutdown;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      PlayerLeft = 1,
      ArenaShutdown = 2,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_Arena);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_Arena other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerLeft, other.PlayerLeft)) return false;
      if (!object.Equals(ArenaShutdown, other.ArenaShutdown)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventCase_ == EventOneofCase.PlayerLeft) hash ^= PlayerLeft.GetHashCode();
      if (eventCase_ == EventOneofCase.ArenaShutdown) hash ^= ArenaShutdown.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (eventCase_ == EventOneofCase.PlayerLeft) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerLeft);
      }
      if (eventCase_ == EventOneofCase.ArenaShutdown) {
        output.WriteRawTag(18);
        output.WriteMessage(ArenaShutdown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventCase_ == EventOneofCase.PlayerLeft) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLeft);
      }
      if (eventCase_ == EventOneofCase.ArenaShutdown) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArenaShutdown);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_Arena other) {
      if (other == null) {
        return;
      }
      switch (other.EventCase) {
        case EventOneofCase.PlayerLeft:
          if (PlayerLeft == null) {
            PlayerLeft = new global::ArenaServer.EventArena_PlayerLeft();
          }
          PlayerLeft.MergeFrom(other.PlayerLeft);
          break;
        case EventOneofCase.ArenaShutdown:
          if (ArenaShutdown == null) {
            ArenaShutdown = new global::ArenaServer.EventArena_Shutdown();
          }
          ArenaShutdown.MergeFrom(other.ArenaShutdown);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::ArenaServer.EventArena_PlayerLeft subBuilder = new global::ArenaServer.EventArena_PlayerLeft();
            if (eventCase_ == EventOneofCase.PlayerLeft) {
              subBuilder.MergeFrom(PlayerLeft);
            }
            input.ReadMessage(subBuilder);
            PlayerLeft = subBuilder;
            break;
          }
          case 18: {
            global::ArenaServer.EventArena_Shutdown subBuilder = new global::ArenaServer.EventArena_Shutdown();
            if (eventCase_ == EventOneofCase.ArenaShutdown) {
              subBuilder.MergeFrom(ArenaShutdown);
            }
            input.ReadMessage(subBuilder);
            ArenaShutdown = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventArena_PlayerLeft : pb::IMessage<EventArena_PlayerLeft> {
    private static readonly pb::MessageParser<EventArena_PlayerLeft> _parser = new pb::MessageParser<EventArena_PlayerLeft>(() => new EventArena_PlayerLeft());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventArena_PlayerLeft> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventArena_PlayerLeft() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventArena_PlayerLeft(EventArena_PlayerLeft other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventArena_PlayerLeft Clone() {
      return new EventArena_PlayerLeft(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventArena_PlayerLeft);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventArena_PlayerLeft other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventArena_PlayerLeft other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventArena_Shutdown : pb::IMessage<EventArena_Shutdown> {
    private static readonly pb::MessageParser<EventArena_Shutdown> _parser = new pb::MessageParser<EventArena_Shutdown>(() => new EventArena_Shutdown());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventArena_Shutdown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventArena_Shutdown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventArena_Shutdown(EventArena_Shutdown other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventArena_Shutdown Clone() {
      return new EventArena_Shutdown(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventArena_Shutdown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventArena_Shutdown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventArena_Shutdown other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class RemovePlayerAttempt : pb::IMessage<RemovePlayerAttempt> {
    private static readonly pb::MessageParser<RemovePlayerAttempt> _parser = new pb::MessageParser<RemovePlayerAttempt>(() => new RemovePlayerAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePlayerAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerAttempt(RemovePlayerAttempt other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerAttempt Clone() {
      return new RemovePlayerAttempt(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePlayerAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePlayerAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePlayerAttempt other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemovePlayerResult : pb::IMessage<RemovePlayerResult> {
    private static readonly pb::MessageParser<RemovePlayerResult> _parser = new pb::MessageParser<RemovePlayerResult>(() => new RemovePlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemovePlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArenaServer.ArenaserverReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerResult(RemovePlayerResult other) : this() {
      isRemoved_ = other.isRemoved_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemovePlayerResult Clone() {
      return new RemovePlayerResult(this);
    }

    /// <summary>Field number for the "is_removed" field.</summary>
    public const int IsRemovedFieldNumber = 1;
    private bool isRemoved_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRemoved {
      get { return isRemoved_; }
      set {
        isRemoved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemovePlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemovePlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsRemoved != other.IsRemoved) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsRemoved != false) hash ^= IsRemoved.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsRemoved != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsRemoved);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsRemoved != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemovePlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.IsRemoved != false) {
        IsRemoved = other.IsRemoved;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsRemoved = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
