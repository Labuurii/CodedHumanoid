// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mainserverv2.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace MainServerV2 {
  public static partial class MainServiceV2
  {
    static readonly string __ServiceName = "MainServerV2.MainServiceV2";

    static readonly grpc::Marshaller<global::MainServerV2.VersionAttempt> __Marshaller_VersionAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.VersionAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.VersionResult> __Marshaller_VersionResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.VersionResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.SubscriptionAttempt> __Marshaller_SubscriptionAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.SubscriptionAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.Event> __Marshaller_Event = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.Event.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.FriendRequestAttempt> __Marshaller_FriendRequestAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.FriendRequestAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.FriendRequestResult> __Marshaller_FriendRequestResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.FriendRequestResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.AnswerFriendRequestAttempt> __Marshaller_AnswerFriendRequestAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.AnswerFriendRequestAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.AnswerFriendRequestResult> __Marshaller_AnswerFriendRequestResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.AnswerFriendRequestResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.RemoveFriendAttempt> __Marshaller_RemoveFriendAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.RemoveFriendAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.RemoveFriendResult> __Marshaller_RemoveFriendResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.RemoveFriendResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.IgnorePlayerAttempt> __Marshaller_IgnorePlayerAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.IgnorePlayerAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.IgnorePlayerResult> __Marshaller_IgnorePlayerResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.IgnorePlayerResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.UnIgnorePlayerAttempt> __Marshaller_UnIgnorePlayerAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.UnIgnorePlayerAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.UnIgnorePlayerResult> __Marshaller_UnIgnorePlayerResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.UnIgnorePlayerResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.InviteToGroupAttempt> __Marshaller_InviteToGroupAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.InviteToGroupAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.InviteToGroupResult> __Marshaller_InviteToGroupResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.InviteToGroupResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.AnswerGroupInviteAttempt> __Marshaller_AnswerGroupInviteAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.AnswerGroupInviteAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.AnswerGroupInviteResult> __Marshaller_AnswerGroupInviteResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.AnswerGroupInviteResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.LeaveGroupAttempt> __Marshaller_LeaveGroupAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.LeaveGroupAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.LeaveGroupResult> __Marshaller_LeaveGroupResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.LeaveGroupResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.SendMessageAttempt> __Marshaller_SendMessageAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.SendMessageAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.SendMessageResult> __Marshaller_SendMessageResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.SendMessageResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.QueueAttempt> __Marshaller_QueueAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.QueueAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.QueueResult> __Marshaller_QueueResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.QueueResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.LeaveQueueAttempt> __Marshaller_LeaveQueueAttempt = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.LeaveQueueAttempt.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::MainServerV2.LeaveQueueResult> __Marshaller_LeaveQueueResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::MainServerV2.LeaveQueueResult.Parser.ParseFrom);

    static readonly grpc::Method<global::MainServerV2.VersionAttempt, global::MainServerV2.VersionResult> __Method_Version = new grpc::Method<global::MainServerV2.VersionAttempt, global::MainServerV2.VersionResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Version",
        __Marshaller_VersionAttempt,
        __Marshaller_VersionResult);

    static readonly grpc::Method<global::MainServerV2.SubscriptionAttempt, global::MainServerV2.Event> __Method_Subscribe = new grpc::Method<global::MainServerV2.SubscriptionAttempt, global::MainServerV2.Event>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Subscribe",
        __Marshaller_SubscriptionAttempt,
        __Marshaller_Event);

    static readonly grpc::Method<global::MainServerV2.FriendRequestAttempt, global::MainServerV2.FriendRequestResult> __Method_SendFriendRequest = new grpc::Method<global::MainServerV2.FriendRequestAttempt, global::MainServerV2.FriendRequestResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendFriendRequest",
        __Marshaller_FriendRequestAttempt,
        __Marshaller_FriendRequestResult);

    static readonly grpc::Method<global::MainServerV2.AnswerFriendRequestAttempt, global::MainServerV2.AnswerFriendRequestResult> __Method_AnswerFriendRequest = new grpc::Method<global::MainServerV2.AnswerFriendRequestAttempt, global::MainServerV2.AnswerFriendRequestResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AnswerFriendRequest",
        __Marshaller_AnswerFriendRequestAttempt,
        __Marshaller_AnswerFriendRequestResult);

    static readonly grpc::Method<global::MainServerV2.RemoveFriendAttempt, global::MainServerV2.RemoveFriendResult> __Method_RemoveFriend = new grpc::Method<global::MainServerV2.RemoveFriendAttempt, global::MainServerV2.RemoveFriendResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveFriend",
        __Marshaller_RemoveFriendAttempt,
        __Marshaller_RemoveFriendResult);

    static readonly grpc::Method<global::MainServerV2.IgnorePlayerAttempt, global::MainServerV2.IgnorePlayerResult> __Method_IgnorePlayer = new grpc::Method<global::MainServerV2.IgnorePlayerAttempt, global::MainServerV2.IgnorePlayerResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IgnorePlayer",
        __Marshaller_IgnorePlayerAttempt,
        __Marshaller_IgnorePlayerResult);

    static readonly grpc::Method<global::MainServerV2.UnIgnorePlayerAttempt, global::MainServerV2.UnIgnorePlayerResult> __Method_UnIgnorePlayer = new grpc::Method<global::MainServerV2.UnIgnorePlayerAttempt, global::MainServerV2.UnIgnorePlayerResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnIgnorePlayer",
        __Marshaller_UnIgnorePlayerAttempt,
        __Marshaller_UnIgnorePlayerResult);

    static readonly grpc::Method<global::MainServerV2.InviteToGroupAttempt, global::MainServerV2.InviteToGroupResult> __Method_InviteToGroup = new grpc::Method<global::MainServerV2.InviteToGroupAttempt, global::MainServerV2.InviteToGroupResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InviteToGroup",
        __Marshaller_InviteToGroupAttempt,
        __Marshaller_InviteToGroupResult);

    static readonly grpc::Method<global::MainServerV2.AnswerGroupInviteAttempt, global::MainServerV2.AnswerGroupInviteResult> __Method_AnswerGroupInvite = new grpc::Method<global::MainServerV2.AnswerGroupInviteAttempt, global::MainServerV2.AnswerGroupInviteResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AnswerGroupInvite",
        __Marshaller_AnswerGroupInviteAttempt,
        __Marshaller_AnswerGroupInviteResult);

    static readonly grpc::Method<global::MainServerV2.LeaveGroupAttempt, global::MainServerV2.LeaveGroupResult> __Method_LeaveGroup = new grpc::Method<global::MainServerV2.LeaveGroupAttempt, global::MainServerV2.LeaveGroupResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LeaveGroup",
        __Marshaller_LeaveGroupAttempt,
        __Marshaller_LeaveGroupResult);

    static readonly grpc::Method<global::MainServerV2.SendMessageAttempt, global::MainServerV2.SendMessageResult> __Method_SendMessage = new grpc::Method<global::MainServerV2.SendMessageAttempt, global::MainServerV2.SendMessageResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendMessage",
        __Marshaller_SendMessageAttempt,
        __Marshaller_SendMessageResult);

    static readonly grpc::Method<global::MainServerV2.QueueAttempt, global::MainServerV2.QueueResult> __Method_Queue = new grpc::Method<global::MainServerV2.QueueAttempt, global::MainServerV2.QueueResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Queue",
        __Marshaller_QueueAttempt,
        __Marshaller_QueueResult);

    static readonly grpc::Method<global::MainServerV2.LeaveQueueAttempt, global::MainServerV2.LeaveQueueResult> __Method_LeaveQueue = new grpc::Method<global::MainServerV2.LeaveQueueAttempt, global::MainServerV2.LeaveQueueResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LeaveQueue",
        __Marshaller_LeaveQueueAttempt,
        __Marshaller_LeaveQueueResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MainServiceV2</summary>
    public abstract partial class MainServiceV2Base
    {
      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.VersionResult> Version(global::MainServerV2.VersionAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task Subscribe(global::MainServerV2.SubscriptionAttempt request, grpc::IServerStreamWriter<global::MainServerV2.Event> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.FriendRequestResult> SendFriendRequest(global::MainServerV2.FriendRequestAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.AnswerFriendRequestResult> AnswerFriendRequest(global::MainServerV2.AnswerFriendRequestAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.RemoveFriendResult> RemoveFriend(global::MainServerV2.RemoveFriendAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.IgnorePlayerResult> IgnorePlayer(global::MainServerV2.IgnorePlayerAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.UnIgnorePlayerResult> UnIgnorePlayer(global::MainServerV2.UnIgnorePlayerAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.InviteToGroupResult> InviteToGroup(global::MainServerV2.InviteToGroupAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.AnswerGroupInviteResult> AnswerGroupInvite(global::MainServerV2.AnswerGroupInviteAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.LeaveGroupResult> LeaveGroup(global::MainServerV2.LeaveGroupAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.SendMessageResult> SendMessage(global::MainServerV2.SendMessageAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.QueueResult> Queue(global::MainServerV2.QueueAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::MainServerV2.LeaveQueueResult> LeaveQueue(global::MainServerV2.LeaveQueueAttempt request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MainServiceV2</summary>
    public partial class MainServiceV2Client : grpc::ClientBase<MainServiceV2Client>
    {
      /// <summary>Creates a new client for MainServiceV2</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MainServiceV2Client(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MainServiceV2 that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MainServiceV2Client(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MainServiceV2Client() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MainServiceV2Client(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::MainServerV2.VersionResult Version(global::MainServerV2.VersionAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Version(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.VersionResult Version(global::MainServerV2.VersionAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Version, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.VersionResult> VersionAsync(global::MainServerV2.VersionAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return VersionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.VersionResult> VersionAsync(global::MainServerV2.VersionAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Version, null, options, request);
      }
      public virtual grpc::AsyncServerStreamingCall<global::MainServerV2.Event> Subscribe(global::MainServerV2.SubscriptionAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Subscribe(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::MainServerV2.Event> Subscribe(global::MainServerV2.SubscriptionAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Subscribe, null, options, request);
      }
      public virtual global::MainServerV2.FriendRequestResult SendFriendRequest(global::MainServerV2.FriendRequestAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendFriendRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.FriendRequestResult SendFriendRequest(global::MainServerV2.FriendRequestAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendFriendRequest, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.FriendRequestResult> SendFriendRequestAsync(global::MainServerV2.FriendRequestAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendFriendRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.FriendRequestResult> SendFriendRequestAsync(global::MainServerV2.FriendRequestAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendFriendRequest, null, options, request);
      }
      public virtual global::MainServerV2.AnswerFriendRequestResult AnswerFriendRequest(global::MainServerV2.AnswerFriendRequestAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AnswerFriendRequest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.AnswerFriendRequestResult AnswerFriendRequest(global::MainServerV2.AnswerFriendRequestAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AnswerFriendRequest, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.AnswerFriendRequestResult> AnswerFriendRequestAsync(global::MainServerV2.AnswerFriendRequestAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AnswerFriendRequestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.AnswerFriendRequestResult> AnswerFriendRequestAsync(global::MainServerV2.AnswerFriendRequestAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AnswerFriendRequest, null, options, request);
      }
      public virtual global::MainServerV2.RemoveFriendResult RemoveFriend(global::MainServerV2.RemoveFriendAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveFriend(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.RemoveFriendResult RemoveFriend(global::MainServerV2.RemoveFriendAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveFriend, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.RemoveFriendResult> RemoveFriendAsync(global::MainServerV2.RemoveFriendAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveFriendAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.RemoveFriendResult> RemoveFriendAsync(global::MainServerV2.RemoveFriendAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveFriend, null, options, request);
      }
      public virtual global::MainServerV2.IgnorePlayerResult IgnorePlayer(global::MainServerV2.IgnorePlayerAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return IgnorePlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.IgnorePlayerResult IgnorePlayer(global::MainServerV2.IgnorePlayerAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IgnorePlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.IgnorePlayerResult> IgnorePlayerAsync(global::MainServerV2.IgnorePlayerAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return IgnorePlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.IgnorePlayerResult> IgnorePlayerAsync(global::MainServerV2.IgnorePlayerAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IgnorePlayer, null, options, request);
      }
      public virtual global::MainServerV2.UnIgnorePlayerResult UnIgnorePlayer(global::MainServerV2.UnIgnorePlayerAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UnIgnorePlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.UnIgnorePlayerResult UnIgnorePlayer(global::MainServerV2.UnIgnorePlayerAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnIgnorePlayer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.UnIgnorePlayerResult> UnIgnorePlayerAsync(global::MainServerV2.UnIgnorePlayerAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UnIgnorePlayerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.UnIgnorePlayerResult> UnIgnorePlayerAsync(global::MainServerV2.UnIgnorePlayerAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnIgnorePlayer, null, options, request);
      }
      public virtual global::MainServerV2.InviteToGroupResult InviteToGroup(global::MainServerV2.InviteToGroupAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InviteToGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.InviteToGroupResult InviteToGroup(global::MainServerV2.InviteToGroupAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InviteToGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.InviteToGroupResult> InviteToGroupAsync(global::MainServerV2.InviteToGroupAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InviteToGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.InviteToGroupResult> InviteToGroupAsync(global::MainServerV2.InviteToGroupAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InviteToGroup, null, options, request);
      }
      public virtual global::MainServerV2.AnswerGroupInviteResult AnswerGroupInvite(global::MainServerV2.AnswerGroupInviteAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AnswerGroupInvite(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.AnswerGroupInviteResult AnswerGroupInvite(global::MainServerV2.AnswerGroupInviteAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AnswerGroupInvite, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.AnswerGroupInviteResult> AnswerGroupInviteAsync(global::MainServerV2.AnswerGroupInviteAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AnswerGroupInviteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.AnswerGroupInviteResult> AnswerGroupInviteAsync(global::MainServerV2.AnswerGroupInviteAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AnswerGroupInvite, null, options, request);
      }
      public virtual global::MainServerV2.LeaveGroupResult LeaveGroup(global::MainServerV2.LeaveGroupAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LeaveGroup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.LeaveGroupResult LeaveGroup(global::MainServerV2.LeaveGroupAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LeaveGroup, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.LeaveGroupResult> LeaveGroupAsync(global::MainServerV2.LeaveGroupAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LeaveGroupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.LeaveGroupResult> LeaveGroupAsync(global::MainServerV2.LeaveGroupAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LeaveGroup, null, options, request);
      }
      public virtual global::MainServerV2.SendMessageResult SendMessage(global::MainServerV2.SendMessageAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.SendMessageResult SendMessage(global::MainServerV2.SendMessageAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendMessage, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.SendMessageResult> SendMessageAsync(global::MainServerV2.SendMessageAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SendMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.SendMessageResult> SendMessageAsync(global::MainServerV2.SendMessageAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendMessage, null, options, request);
      }
      public virtual global::MainServerV2.QueueResult Queue(global::MainServerV2.QueueAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Queue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.QueueResult Queue(global::MainServerV2.QueueAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Queue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.QueueResult> QueueAsync(global::MainServerV2.QueueAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return QueueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.QueueResult> QueueAsync(global::MainServerV2.QueueAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Queue, null, options, request);
      }
      public virtual global::MainServerV2.LeaveQueueResult LeaveQueue(global::MainServerV2.LeaveQueueAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LeaveQueue(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::MainServerV2.LeaveQueueResult LeaveQueue(global::MainServerV2.LeaveQueueAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LeaveQueue, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.LeaveQueueResult> LeaveQueueAsync(global::MainServerV2.LeaveQueueAttempt request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return LeaveQueueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::MainServerV2.LeaveQueueResult> LeaveQueueAsync(global::MainServerV2.LeaveQueueAttempt request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LeaveQueue, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MainServiceV2Client NewInstance(ClientBaseConfiguration configuration)
      {
        return new MainServiceV2Client(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MainServiceV2Base serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Version, serviceImpl.Version)
          .AddMethod(__Method_Subscribe, serviceImpl.Subscribe)
          .AddMethod(__Method_SendFriendRequest, serviceImpl.SendFriendRequest)
          .AddMethod(__Method_AnswerFriendRequest, serviceImpl.AnswerFriendRequest)
          .AddMethod(__Method_RemoveFriend, serviceImpl.RemoveFriend)
          .AddMethod(__Method_IgnorePlayer, serviceImpl.IgnorePlayer)
          .AddMethod(__Method_UnIgnorePlayer, serviceImpl.UnIgnorePlayer)
          .AddMethod(__Method_InviteToGroup, serviceImpl.InviteToGroup)
          .AddMethod(__Method_AnswerGroupInvite, serviceImpl.AnswerGroupInvite)
          .AddMethod(__Method_LeaveGroup, serviceImpl.LeaveGroup)
          .AddMethod(__Method_SendMessage, serviceImpl.SendMessage)
          .AddMethod(__Method_Queue, serviceImpl.Queue)
          .AddMethod(__Method_LeaveQueue, serviceImpl.LeaveQueue).Build();
    }

  }
}
#endregion
