// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mainserverv2.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MainServerV2 {

  /// <summary>Holder for reflection information generated from mainserverv2.proto</summary>
  public static partial class Mainserverv2Reflection {

    #region Descriptor
    /// <summary>File descriptor for mainserverv2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Mainserverv2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJtYWluc2VydmVydjIucHJvdG8SDE1haW5TZXJ2ZXJWMiJNCg9CYXNpY1Bs",
            "YXllckluZm8SFAoMcGVybWFuZW50X2lkGAEgASgDEhQKDGRpc3BsYXlfbmFt",
            "ZRgCIAEoCRIOCgZvbmxpbmUYAyABKAgiEAoOVmVyc2lvbkF0dGVtcHQiIgoN",
            "VmVyc2lvblJlc3VsdBIRCglzZW12ZXJfaWQYASABKAkiOQoTU3Vic2NyaXB0",
            "aW9uQXR0ZW1wdBIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgCIAEo",
            "CSKZBwoFRXZlbnQSNwoMbG9naW5fcmVzdWx0GAEgASgLMh8uTWFpblNlcnZl",
            "clYyLkV2ZW50X0xvZ2luUmVzdWx0SAASOwoOZnJpZW5kX3JlcXVlc3QYAiAB",
            "KAsyIS5NYWluU2VydmVyVjIuRXZlbnRfRnJpZW5kUmVxdWVzdEgAEkwKF2Zy",
            "aWVuZF9hY2NlcHRlZF9yZXF1ZXN0GAMgASgLMikuTWFpblNlcnZlclYyLkV2",
            "ZW50X0ZyaWVuZEFjY2VwdGVkUmVxdWVzdEgAEkIKEmZyaWVuZF9yZW1vdmVk",
            "X3lvdRgEIAEoCzIkLk1haW5TZXJ2ZXJWMi5FdmVudF9GcmllbmRSZW1vdmVk",
            "WW91SAASUwobZnJpZW5kX29ubGluZV9zdGF0ZV9jaGFuZ2VkGAsgASgLMiwu",
            "TWFpblNlcnZlclYyLkV2ZW50X0ZyaWVuZE9ubGluZVN0YXRlQ2hhbmdlZEgA",
            "Ej4KEGdvdF9ncm91cF9pbnZpdGUYBSABKAsyIi5NYWluU2VydmVyVjIuRXZl",
            "bnRfR290R3JvdXBJbnZpdGVIABJJChZncm91cF9pbnZpdGVfdGltZWRfb3V0",
            "GAwgASgLMicuTWFpblNlcnZlclYyLkV2ZW50X0dyb3VwSW52aXRlVGltZWRP",
            "dXRIABJVChxwbGF5ZXJfYW5zd2VyZWRfZ3JvdXBfaW52aXRlGAYgASgLMi0u",
            "TWFpblNlcnZlclYyLkV2ZW50X1BsYXllckFuc3dlcmVkR3JvdXBJbnZpdGVI",
            "ABJAChFwbGF5ZXJfbGVmdF9ncm91cBgHIAEoCzIjLk1haW5TZXJ2ZXJWMi5F",
            "dmVudF9QbGF5ZXJMZWZ0R3JvdXBIABI/ChByZWNlaXZlZF9tZXNzYWdlGAgg",
            "ASgLMiMuTWFpblNlcnZlclYyLkV2ZW50X1JlY2VpdmVkTWVzc2FnZUgAEk8K",
            "GWdyb3VwX3F1ZXVlX3N0YXRlX2NoYW5nZWQYCSABKAsyKi5NYWluU2VydmVy",
            "VjIuRXZlbnRfR3JvdXBRdWV1ZVN0YXRlQ2hhbmdlZEgAEjsKDmdyb3VwX2Rl",
            "cXVldWVkGAogASgLMiEuTWFpblNlcnZlclYyLkV2ZW50X0dyb3VwRGVxdWV1",
            "ZWRIABI3CgxxdWV1ZV9wb3BwZWQYDSABKAsyHy5NYWluU2VydmVyVjIuRXZl",
            "bnRfUXVldWVQb3BwZWRIAEIHCgVldmVudCKlAgoRRXZlbnRfTG9naW5SZXN1",
            "bHQSDwoHc3VjY2VzcxgBIAEoCBINCgV0b2tlbhgCIAEoDBJHCiBwZW5kaW5n",
            "X2ZyaWVuZF9yZXF1ZXN0c19vdXRnb2luZxgDIAMoCzIdLk1haW5TZXJ2ZXJW",
            "Mi5CYXNpY1BsYXllckluZm8SRwogcGVuZGluZ19mcmllbmRfcmVxdWVzdHNf",
            "aW5jb21pbmcYBCADKAsyHS5NYWluU2VydmVyVjIuQmFzaWNQbGF5ZXJJbmZv",
            "Ei4KB2ZyaWVuZHMYBSADKAsyHS5NYWluU2VydmVyVjIuQmFzaWNQbGF5ZXJJ",
            "bmZvEi4KB2lnbm9yZWQYBiADKAsyHS5NYWluU2VydmVyVjIuQmFzaWNQbGF5",
            "ZXJJbmZvIikKFEZyaWVuZFJlcXVlc3RBdHRlbXB0EhEKCXBsYXllcl9pZBgB",
            "IAEoAyItChNGcmllbmRSZXF1ZXN0UmVzdWx0EhYKDmlzX25vd19wZW5kaW5n",
            "GAEgASgIIjwKGkFuc3dlckZyaWVuZFJlcXVlc3RBdHRlbXB0EgwKBGZyb20Y",
            "ASABKAMSEAoIYWNjZXB0ZWQYAiABKAgiLwoZQW5zd2VyRnJpZW5kUmVxdWVz",
            "dFJlc3VsdBISCgpub3dfZnJpZW5kGAEgASgIIigKE1JlbW92ZUZyaWVuZEF0",
            "dGVtcHQSEQoJcGxheWVyX2lkGAEgASgDIi4KElJlbW92ZUZyaWVuZFJlc3Vs",
            "dBIYChBub19sb25nZXJfZnJpZW5kGAEgASgIIk8KE0V2ZW50X0ZyaWVuZFJl",
            "cXVlc3QSOAoRYmFzaWNfcGxheWVyX2luZm8YASABKAsyHS5NYWluU2VydmVy",
            "VjIuQmFzaWNQbGF5ZXJJbmZvIlEKG0V2ZW50X0ZyaWVuZEFjY2VwdGVkUmVx",
            "dWVzdBIyCgtwbGF5ZXJfaW5mbxgBIAEoCzIdLk1haW5TZXJ2ZXJWMi5CYXNp",
            "Y1BsYXllckluZm8iTAoWRXZlbnRfRnJpZW5kUmVtb3ZlZFlvdRIyCgtwbGF5",
            "ZXJfaW5mbxgBIAEoCzIdLk1haW5TZXJ2ZXJWMi5CYXNpY1BsYXllckluZm8i",
            "ZAoeRXZlbnRfRnJpZW5kT25saW5lU3RhdGVDaGFuZ2VkEhEKCXBsYXllcl9p",
            "ZBgBIAEoAxIvCgxvbmxpbmVfc3RhdGUYAiABKA4yGS5NYWluU2VydmVyVjIu",
            "T25saW5lU3RhdGUiKAoTSWdub3JlUGxheWVyQXR0ZW1wdBIRCglwbGF5ZXJf",
            "aWQYASABKAMiKAoSSWdub3JlUGxheWVyUmVzdWx0EhIKCmlzX2lnbm9yZWQY",
            "ASABKAgiKgoVVW5JZ25vcmVQbGF5ZXJBdHRlbXB0EhEKCXBsYXllcl9pZBgB",
            "IAEoAyIqChRVbklnbm9yZVBsYXllclJlc3VsdBISCgppc19pZ25vcmVkGAEg",
            "ASgIIikKFEludml0ZVRvR3JvdXBBdHRlbXB0EhEKCXBsYXllcl9pZBgBIAEo",
            "AyIvChNJbnZpdGVUb0dyb3VwUmVzdWx0EhgKEGludml0ZWRfdG9fZ3JvdXAY",
            "ASABKAgiLAoYQW5zd2VyR3JvdXBJbnZpdGVBdHRlbXB0EhAKCGFjY2VwdGVk",
            "GAEgASgIIpMBChdBbnN3ZXJHcm91cEludml0ZVJlc3VsdBIQCghpbl9ncm91",
            "cBgBIAEoCBItCgZsZWFkZXIYAiABKAsyHS5NYWluU2VydmVyVjIuQmFzaWNQ",
            "bGF5ZXJJbmZvEjcKEHBsYXllcnNfaW5fZ3JvdXAYAyADKAsyHS5NYWluU2Vy",
            "dmVyVjIuQmFzaWNQbGF5ZXJJbmZvIhMKEUxlYXZlR3JvdXBBdHRlbXB0IhIK",
            "EExlYXZlR3JvdXBSZXN1bHQiSgoURXZlbnRfR290R3JvdXBJbnZpdGUSMgoL",
            "ZnJvbV9wbGF5ZXIYASABKAsyHS5NYWluU2VydmVyVjIuQmFzaWNQbGF5ZXJJ",
            "bmZvImIKH0V2ZW50X1BsYXllckFuc3dlcmVkR3JvdXBJbnZpdGUSLQoGcGxh",
            "eWVyGAEgASgLMh0uTWFpblNlcnZlclYyLkJhc2ljUGxheWVySW5mbxIQCghB",
            "Y2NlcHRlZBgCIAEoCCK5AQoVRXZlbnRfUGxheWVyTGVmdEdyb3VwEjUKDnBs",
            "YXllcl9sZWF2aW5nGAEgASgLMh0uTWFpblNlcnZlclYyLkJhc2ljUGxheWVy",
            "SW5mbxIxCgpuZXdfbGVhZGVyGAIgASgLMh0uTWFpblNlcnZlclYyLkJhc2lj",
            "UGxheWVySW5mbxI2Cg9jdXJyZW50X3BsYXllcnMYAyADKAsyHS5NYWluU2Vy",
            "dmVyVjIuQmFzaWNQbGF5ZXJJbmZvIhsKGUV2ZW50X0dyb3VwSW52aXRlVGlt",
            "ZWRPdXQikwEKElNlbmRNZXNzYWdlQXR0ZW1wdBILCgNtc2cYASABKAkSMwoN",
            "ZnJpZW5kX3RhcmdldBgCIAEoCzIaLk1haW5TZXJ2ZXJWMi5GcmllbmRUYXJn",
            "ZXRIABIxCgxncm91cF90YXJnZXQYAyABKAsyGS5NYWluU2VydmVyVjIuR3Jv",
            "dXBUYXJnZXRIAEIICgZ0YXJnZXQiIQoMRnJpZW5kVGFyZ2V0EhEKCXBsYXll",
            "cl9pZBgBIAEoAyINCgtHcm91cFRhcmdldCIpChFTZW5kTWVzc2FnZVJlc3Vs",
            "dBIUCgxzZW50X21lc3NhZ2UYASABKAgihQEKFUV2ZW50X1JlY2VpdmVkTWVz",
            "c2FnZRILCgNtc2cYASABKAkSKwoIbXNnX3R5cGUYAiABKA4yGS5NYWluU2Vy",
            "dmVyVjIuTWVzc2FnZVR5cGUSMgoLZnJvbV9wbGF5ZXIYAyABKAsyHS5NYWlu",
            "U2VydmVyVjIuQmFzaWNQbGF5ZXJJbmZvIjsKDFF1ZXVlQXR0ZW1wdBIrCgpt",
            "YXRjaF9tb2RlGAEgASgOMhcuTWFpblNlcnZlclYyLk1hdGNoTW9kZSIdCgtR",
            "dWV1ZVJlc3VsdBIOCgZxdWV1ZWQYASABKAgiEwoRTGVhdmVRdWV1ZUF0dGVt",
            "cHQiKAoQTGVhdmVRdWV1ZVJlc3VsdBIUCgxub3RfaW5fcXVldWUYASABKAgi",
            "WwocRXZlbnRfR3JvdXBRdWV1ZVN0YXRlQ2hhbmdlZBIOCgZxdWV1ZWQYASAB",
            "KAgSKwoKbWF0Y2hfbW9kZRgCIAEoDjIXLk1haW5TZXJ2ZXJWMi5NYXRjaE1v",
            "ZGUiFQoTRXZlbnRfR3JvdXBEZXF1ZXVlZCI/ChFFdmVudF9RdWV1ZVBvcHBl",
            "ZBISCgphdXRoX3Rva2VuGAEgASgMEhYKDmNvbm5lY3Rpb25fc3RyGAIgASgJ",
            "KiYKC09ubGluZVN0YXRlEgsKB09mZmxpbmUQABIKCgZPbmxpbmUQASokCgtN",
            "ZXNzYWdlVHlwZRIKCgZGcmllbmQQABIJCgVHcm91cBABKh0KCU1hdGNoTW9k",
            "ZRIQCgxCYXR0bGVSb3lhbGUQADLtCAoNTWFpblNlcnZpY2VWMhJGCgdWZXJz",
            "aW9uEhwuTWFpblNlcnZlclYyLlZlcnNpb25BdHRlbXB0GhsuTWFpblNlcnZl",
            "clYyLlZlcnNpb25SZXN1bHQiABJHCglTdWJzY3JpYmUSIS5NYWluU2VydmVy",
            "VjIuU3Vic2NyaXB0aW9uQXR0ZW1wdBoTLk1haW5TZXJ2ZXJWMi5FdmVudCIA",
            "MAESXAoRU2VuZEZyaWVuZFJlcXVlc3QSIi5NYWluU2VydmVyVjIuRnJpZW5k",
            "UmVxdWVzdEF0dGVtcHQaIS5NYWluU2VydmVyVjIuRnJpZW5kUmVxdWVzdFJl",
            "c3VsdCIAEmoKE0Fuc3dlckZyaWVuZFJlcXVlc3QSKC5NYWluU2VydmVyVjIu",
            "QW5zd2VyRnJpZW5kUmVxdWVzdEF0dGVtcHQaJy5NYWluU2VydmVyVjIuQW5z",
            "d2VyRnJpZW5kUmVxdWVzdFJlc3VsdCIAElUKDFJlbW92ZUZyaWVuZBIhLk1h",
            "aW5TZXJ2ZXJWMi5SZW1vdmVGcmllbmRBdHRlbXB0GiAuTWFpblNlcnZlclYy",
            "LlJlbW92ZUZyaWVuZFJlc3VsdCIAElUKDElnbm9yZVBsYXllchIhLk1haW5T",
            "ZXJ2ZXJWMi5JZ25vcmVQbGF5ZXJBdHRlbXB0GiAuTWFpblNlcnZlclYyLkln",
            "bm9yZVBsYXllclJlc3VsdCIAElsKDlVuSWdub3JlUGxheWVyEiMuTWFpblNl",
            "cnZlclYyLlVuSWdub3JlUGxheWVyQXR0ZW1wdBoiLk1haW5TZXJ2ZXJWMi5V",
            "bklnbm9yZVBsYXllclJlc3VsdCIAElgKDUludml0ZVRvR3JvdXASIi5NYWlu",
            "U2VydmVyVjIuSW52aXRlVG9Hcm91cEF0dGVtcHQaIS5NYWluU2VydmVyVjIu",
            "SW52aXRlVG9Hcm91cFJlc3VsdCIAEmQKEUFuc3dlckdyb3VwSW52aXRlEiYu",
            "TWFpblNlcnZlclYyLkFuc3dlckdyb3VwSW52aXRlQXR0ZW1wdBolLk1haW5T",
            "ZXJ2ZXJWMi5BbnN3ZXJHcm91cEludml0ZVJlc3VsdCIAEk8KCkxlYXZlR3Jv",
            "dXASHy5NYWluU2VydmVyVjIuTGVhdmVHcm91cEF0dGVtcHQaHi5NYWluU2Vy",
            "dmVyVjIuTGVhdmVHcm91cFJlc3VsdCIAElIKC1NlbmRNZXNzYWdlEiAuTWFp",
            "blNlcnZlclYyLlNlbmRNZXNzYWdlQXR0ZW1wdBofLk1haW5TZXJ2ZXJWMi5T",
            "ZW5kTWVzc2FnZVJlc3VsdCIAEkAKBVF1ZXVlEhouTWFpblNlcnZlclYyLlF1",
            "ZXVlQXR0ZW1wdBoZLk1haW5TZXJ2ZXJWMi5RdWV1ZVJlc3VsdCIAEk8KCkxl",
            "YXZlUXVldWUSHy5NYWluU2VydmVyVjIuTGVhdmVRdWV1ZUF0dGVtcHQaHi5N",
            "YWluU2VydmVyVjIuTGVhdmVRdWV1ZVJlc3VsdCIAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MainServerV2.OnlineState), typeof(global::MainServerV2.MessageType), typeof(global::MainServerV2.MatchMode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.BasicPlayerInfo), global::MainServerV2.BasicPlayerInfo.Parser, new[]{ "PermanentId", "DisplayName", "Online" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.VersionAttempt), global::MainServerV2.VersionAttempt.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.VersionResult), global::MainServerV2.VersionResult.Parser, new[]{ "SemverId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.SubscriptionAttempt), global::MainServerV2.SubscriptionAttempt.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event), global::MainServerV2.Event.Parser, new[]{ "LoginResult", "FriendRequest", "FriendAcceptedRequest", "FriendRemovedYou", "FriendOnlineStateChanged", "GotGroupInvite", "GroupInviteTimedOut", "PlayerAnsweredGroupInvite", "PlayerLeftGroup", "ReceivedMessage", "GroupQueueStateChanged", "GroupDequeued", "QueuePopped" }, new[]{ "Event" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_LoginResult), global::MainServerV2.Event_LoginResult.Parser, new[]{ "Success", "Token", "PendingFriendRequestsOutgoing", "PendingFriendRequestsIncoming", "Friends", "Ignored" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.FriendRequestAttempt), global::MainServerV2.FriendRequestAttempt.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.FriendRequestResult), global::MainServerV2.FriendRequestResult.Parser, new[]{ "IsNowPending" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.AnswerFriendRequestAttempt), global::MainServerV2.AnswerFriendRequestAttempt.Parser, new[]{ "From", "Accepted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.AnswerFriendRequestResult), global::MainServerV2.AnswerFriendRequestResult.Parser, new[]{ "NowFriend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.RemoveFriendAttempt), global::MainServerV2.RemoveFriendAttempt.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.RemoveFriendResult), global::MainServerV2.RemoveFriendResult.Parser, new[]{ "NoLongerFriend" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_FriendRequest), global::MainServerV2.Event_FriendRequest.Parser, new[]{ "BasicPlayerInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_FriendAcceptedRequest), global::MainServerV2.Event_FriendAcceptedRequest.Parser, new[]{ "PlayerInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_FriendRemovedYou), global::MainServerV2.Event_FriendRemovedYou.Parser, new[]{ "PlayerInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_FriendOnlineStateChanged), global::MainServerV2.Event_FriendOnlineStateChanged.Parser, new[]{ "PlayerId", "OnlineState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.IgnorePlayerAttempt), global::MainServerV2.IgnorePlayerAttempt.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.IgnorePlayerResult), global::MainServerV2.IgnorePlayerResult.Parser, new[]{ "IsIgnored" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.UnIgnorePlayerAttempt), global::MainServerV2.UnIgnorePlayerAttempt.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.UnIgnorePlayerResult), global::MainServerV2.UnIgnorePlayerResult.Parser, new[]{ "IsIgnored" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.InviteToGroupAttempt), global::MainServerV2.InviteToGroupAttempt.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.InviteToGroupResult), global::MainServerV2.InviteToGroupResult.Parser, new[]{ "InvitedToGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.AnswerGroupInviteAttempt), global::MainServerV2.AnswerGroupInviteAttempt.Parser, new[]{ "Accepted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.AnswerGroupInviteResult), global::MainServerV2.AnswerGroupInviteResult.Parser, new[]{ "InGroup", "Leader", "PlayersInGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.LeaveGroupAttempt), global::MainServerV2.LeaveGroupAttempt.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.LeaveGroupResult), global::MainServerV2.LeaveGroupResult.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_GotGroupInvite), global::MainServerV2.Event_GotGroupInvite.Parser, new[]{ "FromPlayer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_PlayerAnsweredGroupInvite), global::MainServerV2.Event_PlayerAnsweredGroupInvite.Parser, new[]{ "Player", "Accepted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_PlayerLeftGroup), global::MainServerV2.Event_PlayerLeftGroup.Parser, new[]{ "PlayerLeaving", "NewLeader", "CurrentPlayers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_GroupInviteTimedOut), global::MainServerV2.Event_GroupInviteTimedOut.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.SendMessageAttempt), global::MainServerV2.SendMessageAttempt.Parser, new[]{ "Msg", "FriendTarget", "GroupTarget" }, new[]{ "Target" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.FriendTarget), global::MainServerV2.FriendTarget.Parser, new[]{ "PlayerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.GroupTarget), global::MainServerV2.GroupTarget.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.SendMessageResult), global::MainServerV2.SendMessageResult.Parser, new[]{ "SentMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_ReceivedMessage), global::MainServerV2.Event_ReceivedMessage.Parser, new[]{ "Msg", "MsgType", "FromPlayer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.QueueAttempt), global::MainServerV2.QueueAttempt.Parser, new[]{ "MatchMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.QueueResult), global::MainServerV2.QueueResult.Parser, new[]{ "Queued" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.LeaveQueueAttempt), global::MainServerV2.LeaveQueueAttempt.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.LeaveQueueResult), global::MainServerV2.LeaveQueueResult.Parser, new[]{ "NotInQueue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_GroupQueueStateChanged), global::MainServerV2.Event_GroupQueueStateChanged.Parser, new[]{ "Queued", "MatchMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_GroupDequeued), global::MainServerV2.Event_GroupDequeued.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MainServerV2.Event_QueuePopped), global::MainServerV2.Event_QueuePopped.Parser, new[]{ "AuthToken", "ConnectionStr" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OnlineState {
    [pbr::OriginalName("Offline")] Offline = 0,
    [pbr::OriginalName("Online")] Online = 1,
  }

  public enum MessageType {
    [pbr::OriginalName("Friend")] Friend = 0,
    [pbr::OriginalName("Group")] Group = 1,
  }

  public enum MatchMode {
    [pbr::OriginalName("BattleRoyale")] BattleRoyale = 0,
  }

  #endregion

  #region Messages
  public sealed partial class BasicPlayerInfo : pb::IMessage<BasicPlayerInfo> {
    private static readonly pb::MessageParser<BasicPlayerInfo> _parser = new pb::MessageParser<BasicPlayerInfo>(() => new BasicPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BasicPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicPlayerInfo(BasicPlayerInfo other) : this() {
      permanentId_ = other.permanentId_;
      displayName_ = other.displayName_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BasicPlayerInfo Clone() {
      return new BasicPlayerInfo(this);
    }

    /// <summary>Field number for the "permanent_id" field.</summary>
    public const int PermanentIdFieldNumber = 1;
    private long permanentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PermanentId {
      get { return permanentId_; }
      set {
        permanentId_ = value;
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 2;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 3;
    private bool online_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BasicPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BasicPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PermanentId != other.PermanentId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PermanentId != 0L) hash ^= PermanentId.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Online != false) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PermanentId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PermanentId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DisplayName);
      }
      if (Online != false) {
        output.WriteRawTag(24);
        output.WriteBool(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PermanentId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PermanentId);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Online != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BasicPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.PermanentId != 0L) {
        PermanentId = other.PermanentId;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Online != false) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PermanentId = input.ReadInt64();
            break;
          }
          case 18: {
            DisplayName = input.ReadString();
            break;
          }
          case 24: {
            Online = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class VersionAttempt : pb::IMessage<VersionAttempt> {
    private static readonly pb::MessageParser<VersionAttempt> _parser = new pb::MessageParser<VersionAttempt>(() => new VersionAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionAttempt(VersionAttempt other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionAttempt Clone() {
      return new VersionAttempt(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionAttempt other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class VersionResult : pb::IMessage<VersionResult> {
    private static readonly pb::MessageParser<VersionResult> _parser = new pb::MessageParser<VersionResult>(() => new VersionResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionResult(VersionResult other) : this() {
      semverId_ = other.semverId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionResult Clone() {
      return new VersionResult(this);
    }

    /// <summary>Field number for the "semver_id" field.</summary>
    public const int SemverIdFieldNumber = 1;
    private string semverId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SemverId {
      get { return semverId_; }
      set {
        semverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SemverId != other.SemverId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SemverId.Length != 0) hash ^= SemverId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SemverId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SemverId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SemverId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SemverId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionResult other) {
      if (other == null) {
        return;
      }
      if (other.SemverId.Length != 0) {
        SemverId = other.SemverId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SemverId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionAttempt : pb::IMessage<SubscriptionAttempt> {
    private static readonly pb::MessageParser<SubscriptionAttempt> _parser = new pb::MessageParser<SubscriptionAttempt>(() => new SubscriptionAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionAttempt(SubscriptionAttempt other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionAttempt Clone() {
      return new SubscriptionAttempt(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionAttempt other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      switch (other.EventCase) {
        case EventOneofCase.LoginResult:
          LoginResult = other.LoginResult.Clone();
          break;
        case EventOneofCase.FriendRequest:
          FriendRequest = other.FriendRequest.Clone();
          break;
        case EventOneofCase.FriendAcceptedRequest:
          FriendAcceptedRequest = other.FriendAcceptedRequest.Clone();
          break;
        case EventOneofCase.FriendRemovedYou:
          FriendRemovedYou = other.FriendRemovedYou.Clone();
          break;
        case EventOneofCase.FriendOnlineStateChanged:
          FriendOnlineStateChanged = other.FriendOnlineStateChanged.Clone();
          break;
        case EventOneofCase.GotGroupInvite:
          GotGroupInvite = other.GotGroupInvite.Clone();
          break;
        case EventOneofCase.GroupInviteTimedOut:
          GroupInviteTimedOut = other.GroupInviteTimedOut.Clone();
          break;
        case EventOneofCase.PlayerAnsweredGroupInvite:
          PlayerAnsweredGroupInvite = other.PlayerAnsweredGroupInvite.Clone();
          break;
        case EventOneofCase.PlayerLeftGroup:
          PlayerLeftGroup = other.PlayerLeftGroup.Clone();
          break;
        case EventOneofCase.ReceivedMessage:
          ReceivedMessage = other.ReceivedMessage.Clone();
          break;
        case EventOneofCase.GroupQueueStateChanged:
          GroupQueueStateChanged = other.GroupQueueStateChanged.Clone();
          break;
        case EventOneofCase.GroupDequeued:
          GroupDequeued = other.GroupDequeued.Clone();
          break;
        case EventOneofCase.QueuePopped:
          QueuePopped = other.QueuePopped.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "login_result" field.</summary>
    public const int LoginResultFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_LoginResult LoginResult {
      get { return eventCase_ == EventOneofCase.LoginResult ? (global::MainServerV2.Event_LoginResult) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.LoginResult;
      }
    }

    /// <summary>Field number for the "friend_request" field.</summary>
    public const int FriendRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_FriendRequest FriendRequest {
      get { return eventCase_ == EventOneofCase.FriendRequest ? (global::MainServerV2.Event_FriendRequest) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.FriendRequest;
      }
    }

    /// <summary>Field number for the "friend_accepted_request" field.</summary>
    public const int FriendAcceptedRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_FriendAcceptedRequest FriendAcceptedRequest {
      get { return eventCase_ == EventOneofCase.FriendAcceptedRequest ? (global::MainServerV2.Event_FriendAcceptedRequest) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.FriendAcceptedRequest;
      }
    }

    /// <summary>Field number for the "friend_removed_you" field.</summary>
    public const int FriendRemovedYouFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_FriendRemovedYou FriendRemovedYou {
      get { return eventCase_ == EventOneofCase.FriendRemovedYou ? (global::MainServerV2.Event_FriendRemovedYou) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.FriendRemovedYou;
      }
    }

    /// <summary>Field number for the "friend_online_state_changed" field.</summary>
    public const int FriendOnlineStateChangedFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_FriendOnlineStateChanged FriendOnlineStateChanged {
      get { return eventCase_ == EventOneofCase.FriendOnlineStateChanged ? (global::MainServerV2.Event_FriendOnlineStateChanged) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.FriendOnlineStateChanged;
      }
    }

    /// <summary>Field number for the "got_group_invite" field.</summary>
    public const int GotGroupInviteFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_GotGroupInvite GotGroupInvite {
      get { return eventCase_ == EventOneofCase.GotGroupInvite ? (global::MainServerV2.Event_GotGroupInvite) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.GotGroupInvite;
      }
    }

    /// <summary>Field number for the "group_invite_timed_out" field.</summary>
    public const int GroupInviteTimedOutFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_GroupInviteTimedOut GroupInviteTimedOut {
      get { return eventCase_ == EventOneofCase.GroupInviteTimedOut ? (global::MainServerV2.Event_GroupInviteTimedOut) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.GroupInviteTimedOut;
      }
    }

    /// <summary>Field number for the "player_answered_group_invite" field.</summary>
    public const int PlayerAnsweredGroupInviteFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_PlayerAnsweredGroupInvite PlayerAnsweredGroupInvite {
      get { return eventCase_ == EventOneofCase.PlayerAnsweredGroupInvite ? (global::MainServerV2.Event_PlayerAnsweredGroupInvite) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PlayerAnsweredGroupInvite;
      }
    }

    /// <summary>Field number for the "player_left_group" field.</summary>
    public const int PlayerLeftGroupFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_PlayerLeftGroup PlayerLeftGroup {
      get { return eventCase_ == EventOneofCase.PlayerLeftGroup ? (global::MainServerV2.Event_PlayerLeftGroup) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.PlayerLeftGroup;
      }
    }

    /// <summary>Field number for the "received_message" field.</summary>
    public const int ReceivedMessageFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_ReceivedMessage ReceivedMessage {
      get { return eventCase_ == EventOneofCase.ReceivedMessage ? (global::MainServerV2.Event_ReceivedMessage) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.ReceivedMessage;
      }
    }

    /// <summary>Field number for the "group_queue_state_changed" field.</summary>
    public const int GroupQueueStateChangedFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_GroupQueueStateChanged GroupQueueStateChanged {
      get { return eventCase_ == EventOneofCase.GroupQueueStateChanged ? (global::MainServerV2.Event_GroupQueueStateChanged) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.GroupQueueStateChanged;
      }
    }

    /// <summary>Field number for the "group_dequeued" field.</summary>
    public const int GroupDequeuedFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_GroupDequeued GroupDequeued {
      get { return eventCase_ == EventOneofCase.GroupDequeued ? (global::MainServerV2.Event_GroupDequeued) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.GroupDequeued;
      }
    }

    /// <summary>Field number for the "queue_popped" field.</summary>
    public const int QueuePoppedFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.Event_QueuePopped QueuePopped {
      get { return eventCase_ == EventOneofCase.QueuePopped ? (global::MainServerV2.Event_QueuePopped) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.QueuePopped;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      LoginResult = 1,
      FriendRequest = 2,
      FriendAcceptedRequest = 3,
      FriendRemovedYou = 4,
      FriendOnlineStateChanged = 11,
      GotGroupInvite = 5,
      GroupInviteTimedOut = 12,
      PlayerAnsweredGroupInvite = 6,
      PlayerLeftGroup = 7,
      ReceivedMessage = 8,
      GroupQueueStateChanged = 9,
      GroupDequeued = 10,
      QueuePopped = 13,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoginResult, other.LoginResult)) return false;
      if (!object.Equals(FriendRequest, other.FriendRequest)) return false;
      if (!object.Equals(FriendAcceptedRequest, other.FriendAcceptedRequest)) return false;
      if (!object.Equals(FriendRemovedYou, other.FriendRemovedYou)) return false;
      if (!object.Equals(FriendOnlineStateChanged, other.FriendOnlineStateChanged)) return false;
      if (!object.Equals(GotGroupInvite, other.GotGroupInvite)) return false;
      if (!object.Equals(GroupInviteTimedOut, other.GroupInviteTimedOut)) return false;
      if (!object.Equals(PlayerAnsweredGroupInvite, other.PlayerAnsweredGroupInvite)) return false;
      if (!object.Equals(PlayerLeftGroup, other.PlayerLeftGroup)) return false;
      if (!object.Equals(ReceivedMessage, other.ReceivedMessage)) return false;
      if (!object.Equals(GroupQueueStateChanged, other.GroupQueueStateChanged)) return false;
      if (!object.Equals(GroupDequeued, other.GroupDequeued)) return false;
      if (!object.Equals(QueuePopped, other.QueuePopped)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventCase_ == EventOneofCase.LoginResult) hash ^= LoginResult.GetHashCode();
      if (eventCase_ == EventOneofCase.FriendRequest) hash ^= FriendRequest.GetHashCode();
      if (eventCase_ == EventOneofCase.FriendAcceptedRequest) hash ^= FriendAcceptedRequest.GetHashCode();
      if (eventCase_ == EventOneofCase.FriendRemovedYou) hash ^= FriendRemovedYou.GetHashCode();
      if (eventCase_ == EventOneofCase.FriendOnlineStateChanged) hash ^= FriendOnlineStateChanged.GetHashCode();
      if (eventCase_ == EventOneofCase.GotGroupInvite) hash ^= GotGroupInvite.GetHashCode();
      if (eventCase_ == EventOneofCase.GroupInviteTimedOut) hash ^= GroupInviteTimedOut.GetHashCode();
      if (eventCase_ == EventOneofCase.PlayerAnsweredGroupInvite) hash ^= PlayerAnsweredGroupInvite.GetHashCode();
      if (eventCase_ == EventOneofCase.PlayerLeftGroup) hash ^= PlayerLeftGroup.GetHashCode();
      if (eventCase_ == EventOneofCase.ReceivedMessage) hash ^= ReceivedMessage.GetHashCode();
      if (eventCase_ == EventOneofCase.GroupQueueStateChanged) hash ^= GroupQueueStateChanged.GetHashCode();
      if (eventCase_ == EventOneofCase.GroupDequeued) hash ^= GroupDequeued.GetHashCode();
      if (eventCase_ == EventOneofCase.QueuePopped) hash ^= QueuePopped.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (eventCase_ == EventOneofCase.LoginResult) {
        output.WriteRawTag(10);
        output.WriteMessage(LoginResult);
      }
      if (eventCase_ == EventOneofCase.FriendRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(FriendRequest);
      }
      if (eventCase_ == EventOneofCase.FriendAcceptedRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(FriendAcceptedRequest);
      }
      if (eventCase_ == EventOneofCase.FriendRemovedYou) {
        output.WriteRawTag(34);
        output.WriteMessage(FriendRemovedYou);
      }
      if (eventCase_ == EventOneofCase.GotGroupInvite) {
        output.WriteRawTag(42);
        output.WriteMessage(GotGroupInvite);
      }
      if (eventCase_ == EventOneofCase.PlayerAnsweredGroupInvite) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerAnsweredGroupInvite);
      }
      if (eventCase_ == EventOneofCase.PlayerLeftGroup) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerLeftGroup);
      }
      if (eventCase_ == EventOneofCase.ReceivedMessage) {
        output.WriteRawTag(66);
        output.WriteMessage(ReceivedMessage);
      }
      if (eventCase_ == EventOneofCase.GroupQueueStateChanged) {
        output.WriteRawTag(74);
        output.WriteMessage(GroupQueueStateChanged);
      }
      if (eventCase_ == EventOneofCase.GroupDequeued) {
        output.WriteRawTag(82);
        output.WriteMessage(GroupDequeued);
      }
      if (eventCase_ == EventOneofCase.FriendOnlineStateChanged) {
        output.WriteRawTag(90);
        output.WriteMessage(FriendOnlineStateChanged);
      }
      if (eventCase_ == EventOneofCase.GroupInviteTimedOut) {
        output.WriteRawTag(98);
        output.WriteMessage(GroupInviteTimedOut);
      }
      if (eventCase_ == EventOneofCase.QueuePopped) {
        output.WriteRawTag(106);
        output.WriteMessage(QueuePopped);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventCase_ == EventOneofCase.LoginResult) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginResult);
      }
      if (eventCase_ == EventOneofCase.FriendRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendRequest);
      }
      if (eventCase_ == EventOneofCase.FriendAcceptedRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendAcceptedRequest);
      }
      if (eventCase_ == EventOneofCase.FriendRemovedYou) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendRemovedYou);
      }
      if (eventCase_ == EventOneofCase.FriendOnlineStateChanged) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendOnlineStateChanged);
      }
      if (eventCase_ == EventOneofCase.GotGroupInvite) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GotGroupInvite);
      }
      if (eventCase_ == EventOneofCase.GroupInviteTimedOut) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupInviteTimedOut);
      }
      if (eventCase_ == EventOneofCase.PlayerAnsweredGroupInvite) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAnsweredGroupInvite);
      }
      if (eventCase_ == EventOneofCase.PlayerLeftGroup) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLeftGroup);
      }
      if (eventCase_ == EventOneofCase.ReceivedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReceivedMessage);
      }
      if (eventCase_ == EventOneofCase.GroupQueueStateChanged) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupQueueStateChanged);
      }
      if (eventCase_ == EventOneofCase.GroupDequeued) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupDequeued);
      }
      if (eventCase_ == EventOneofCase.QueuePopped) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueuePopped);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      switch (other.EventCase) {
        case EventOneofCase.LoginResult:
          if (LoginResult == null) {
            LoginResult = new global::MainServerV2.Event_LoginResult();
          }
          LoginResult.MergeFrom(other.LoginResult);
          break;
        case EventOneofCase.FriendRequest:
          if (FriendRequest == null) {
            FriendRequest = new global::MainServerV2.Event_FriendRequest();
          }
          FriendRequest.MergeFrom(other.FriendRequest);
          break;
        case EventOneofCase.FriendAcceptedRequest:
          if (FriendAcceptedRequest == null) {
            FriendAcceptedRequest = new global::MainServerV2.Event_FriendAcceptedRequest();
          }
          FriendAcceptedRequest.MergeFrom(other.FriendAcceptedRequest);
          break;
        case EventOneofCase.FriendRemovedYou:
          if (FriendRemovedYou == null) {
            FriendRemovedYou = new global::MainServerV2.Event_FriendRemovedYou();
          }
          FriendRemovedYou.MergeFrom(other.FriendRemovedYou);
          break;
        case EventOneofCase.FriendOnlineStateChanged:
          if (FriendOnlineStateChanged == null) {
            FriendOnlineStateChanged = new global::MainServerV2.Event_FriendOnlineStateChanged();
          }
          FriendOnlineStateChanged.MergeFrom(other.FriendOnlineStateChanged);
          break;
        case EventOneofCase.GotGroupInvite:
          if (GotGroupInvite == null) {
            GotGroupInvite = new global::MainServerV2.Event_GotGroupInvite();
          }
          GotGroupInvite.MergeFrom(other.GotGroupInvite);
          break;
        case EventOneofCase.GroupInviteTimedOut:
          if (GroupInviteTimedOut == null) {
            GroupInviteTimedOut = new global::MainServerV2.Event_GroupInviteTimedOut();
          }
          GroupInviteTimedOut.MergeFrom(other.GroupInviteTimedOut);
          break;
        case EventOneofCase.PlayerAnsweredGroupInvite:
          if (PlayerAnsweredGroupInvite == null) {
            PlayerAnsweredGroupInvite = new global::MainServerV2.Event_PlayerAnsweredGroupInvite();
          }
          PlayerAnsweredGroupInvite.MergeFrom(other.PlayerAnsweredGroupInvite);
          break;
        case EventOneofCase.PlayerLeftGroup:
          if (PlayerLeftGroup == null) {
            PlayerLeftGroup = new global::MainServerV2.Event_PlayerLeftGroup();
          }
          PlayerLeftGroup.MergeFrom(other.PlayerLeftGroup);
          break;
        case EventOneofCase.ReceivedMessage:
          if (ReceivedMessage == null) {
            ReceivedMessage = new global::MainServerV2.Event_ReceivedMessage();
          }
          ReceivedMessage.MergeFrom(other.ReceivedMessage);
          break;
        case EventOneofCase.GroupQueueStateChanged:
          if (GroupQueueStateChanged == null) {
            GroupQueueStateChanged = new global::MainServerV2.Event_GroupQueueStateChanged();
          }
          GroupQueueStateChanged.MergeFrom(other.GroupQueueStateChanged);
          break;
        case EventOneofCase.GroupDequeued:
          if (GroupDequeued == null) {
            GroupDequeued = new global::MainServerV2.Event_GroupDequeued();
          }
          GroupDequeued.MergeFrom(other.GroupDequeued);
          break;
        case EventOneofCase.QueuePopped:
          if (QueuePopped == null) {
            QueuePopped = new global::MainServerV2.Event_QueuePopped();
          }
          QueuePopped.MergeFrom(other.QueuePopped);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::MainServerV2.Event_LoginResult subBuilder = new global::MainServerV2.Event_LoginResult();
            if (eventCase_ == EventOneofCase.LoginResult) {
              subBuilder.MergeFrom(LoginResult);
            }
            input.ReadMessage(subBuilder);
            LoginResult = subBuilder;
            break;
          }
          case 18: {
            global::MainServerV2.Event_FriendRequest subBuilder = new global::MainServerV2.Event_FriendRequest();
            if (eventCase_ == EventOneofCase.FriendRequest) {
              subBuilder.MergeFrom(FriendRequest);
            }
            input.ReadMessage(subBuilder);
            FriendRequest = subBuilder;
            break;
          }
          case 26: {
            global::MainServerV2.Event_FriendAcceptedRequest subBuilder = new global::MainServerV2.Event_FriendAcceptedRequest();
            if (eventCase_ == EventOneofCase.FriendAcceptedRequest) {
              subBuilder.MergeFrom(FriendAcceptedRequest);
            }
            input.ReadMessage(subBuilder);
            FriendAcceptedRequest = subBuilder;
            break;
          }
          case 34: {
            global::MainServerV2.Event_FriendRemovedYou subBuilder = new global::MainServerV2.Event_FriendRemovedYou();
            if (eventCase_ == EventOneofCase.FriendRemovedYou) {
              subBuilder.MergeFrom(FriendRemovedYou);
            }
            input.ReadMessage(subBuilder);
            FriendRemovedYou = subBuilder;
            break;
          }
          case 42: {
            global::MainServerV2.Event_GotGroupInvite subBuilder = new global::MainServerV2.Event_GotGroupInvite();
            if (eventCase_ == EventOneofCase.GotGroupInvite) {
              subBuilder.MergeFrom(GotGroupInvite);
            }
            input.ReadMessage(subBuilder);
            GotGroupInvite = subBuilder;
            break;
          }
          case 50: {
            global::MainServerV2.Event_PlayerAnsweredGroupInvite subBuilder = new global::MainServerV2.Event_PlayerAnsweredGroupInvite();
            if (eventCase_ == EventOneofCase.PlayerAnsweredGroupInvite) {
              subBuilder.MergeFrom(PlayerAnsweredGroupInvite);
            }
            input.ReadMessage(subBuilder);
            PlayerAnsweredGroupInvite = subBuilder;
            break;
          }
          case 58: {
            global::MainServerV2.Event_PlayerLeftGroup subBuilder = new global::MainServerV2.Event_PlayerLeftGroup();
            if (eventCase_ == EventOneofCase.PlayerLeftGroup) {
              subBuilder.MergeFrom(PlayerLeftGroup);
            }
            input.ReadMessage(subBuilder);
            PlayerLeftGroup = subBuilder;
            break;
          }
          case 66: {
            global::MainServerV2.Event_ReceivedMessage subBuilder = new global::MainServerV2.Event_ReceivedMessage();
            if (eventCase_ == EventOneofCase.ReceivedMessage) {
              subBuilder.MergeFrom(ReceivedMessage);
            }
            input.ReadMessage(subBuilder);
            ReceivedMessage = subBuilder;
            break;
          }
          case 74: {
            global::MainServerV2.Event_GroupQueueStateChanged subBuilder = new global::MainServerV2.Event_GroupQueueStateChanged();
            if (eventCase_ == EventOneofCase.GroupQueueStateChanged) {
              subBuilder.MergeFrom(GroupQueueStateChanged);
            }
            input.ReadMessage(subBuilder);
            GroupQueueStateChanged = subBuilder;
            break;
          }
          case 82: {
            global::MainServerV2.Event_GroupDequeued subBuilder = new global::MainServerV2.Event_GroupDequeued();
            if (eventCase_ == EventOneofCase.GroupDequeued) {
              subBuilder.MergeFrom(GroupDequeued);
            }
            input.ReadMessage(subBuilder);
            GroupDequeued = subBuilder;
            break;
          }
          case 90: {
            global::MainServerV2.Event_FriendOnlineStateChanged subBuilder = new global::MainServerV2.Event_FriendOnlineStateChanged();
            if (eventCase_ == EventOneofCase.FriendOnlineStateChanged) {
              subBuilder.MergeFrom(FriendOnlineStateChanged);
            }
            input.ReadMessage(subBuilder);
            FriendOnlineStateChanged = subBuilder;
            break;
          }
          case 98: {
            global::MainServerV2.Event_GroupInviteTimedOut subBuilder = new global::MainServerV2.Event_GroupInviteTimedOut();
            if (eventCase_ == EventOneofCase.GroupInviteTimedOut) {
              subBuilder.MergeFrom(GroupInviteTimedOut);
            }
            input.ReadMessage(subBuilder);
            GroupInviteTimedOut = subBuilder;
            break;
          }
          case 106: {
            global::MainServerV2.Event_QueuePopped subBuilder = new global::MainServerV2.Event_QueuePopped();
            if (eventCase_ == EventOneofCase.QueuePopped) {
              subBuilder.MergeFrom(QueuePopped);
            }
            input.ReadMessage(subBuilder);
            QueuePopped = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///TODO: Extended player data
  /// </summary>
  public sealed partial class Event_LoginResult : pb::IMessage<Event_LoginResult> {
    private static readonly pb::MessageParser<Event_LoginResult> _parser = new pb::MessageParser<Event_LoginResult>(() => new Event_LoginResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_LoginResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_LoginResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_LoginResult(Event_LoginResult other) : this() {
      success_ = other.success_;
      token_ = other.token_;
      pendingFriendRequestsOutgoing_ = other.pendingFriendRequestsOutgoing_.Clone();
      pendingFriendRequestsIncoming_ = other.pendingFriendRequestsIncoming_.Clone();
      friends_ = other.friends_.Clone();
      ignored_ = other.ignored_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_LoginResult Clone() {
      return new Event_LoginResult(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private pb::ByteString token_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pending_friend_requests_outgoing" field.</summary>
    public const int PendingFriendRequestsOutgoingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MainServerV2.BasicPlayerInfo> _repeated_pendingFriendRequestsOutgoing_codec
        = pb::FieldCodec.ForMessage(26, global::MainServerV2.BasicPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> pendingFriendRequestsOutgoing_ = new pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> PendingFriendRequestsOutgoing {
      get { return pendingFriendRequestsOutgoing_; }
    }

    /// <summary>Field number for the "pending_friend_requests_incoming" field.</summary>
    public const int PendingFriendRequestsIncomingFieldNumber = 4;
    private static readonly pb::FieldCodec<global::MainServerV2.BasicPlayerInfo> _repeated_pendingFriendRequestsIncoming_codec
        = pb::FieldCodec.ForMessage(34, global::MainServerV2.BasicPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> pendingFriendRequestsIncoming_ = new pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> PendingFriendRequestsIncoming {
      get { return pendingFriendRequestsIncoming_; }
    }

    /// <summary>Field number for the "friends" field.</summary>
    public const int FriendsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::MainServerV2.BasicPlayerInfo> _repeated_friends_codec
        = pb::FieldCodec.ForMessage(42, global::MainServerV2.BasicPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> friends_ = new pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> Friends {
      get { return friends_; }
    }

    /// <summary>Field number for the "ignored" field.</summary>
    public const int IgnoredFieldNumber = 6;
    private static readonly pb::FieldCodec<global::MainServerV2.BasicPlayerInfo> _repeated_ignored_codec
        = pb::FieldCodec.ForMessage(50, global::MainServerV2.BasicPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> ignored_ = new pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> Ignored {
      get { return ignored_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_LoginResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_LoginResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      if (Token != other.Token) return false;
      if(!pendingFriendRequestsOutgoing_.Equals(other.pendingFriendRequestsOutgoing_)) return false;
      if(!pendingFriendRequestsIncoming_.Equals(other.pendingFriendRequestsIncoming_)) return false;
      if(!friends_.Equals(other.friends_)) return false;
      if(!ignored_.Equals(other.ignored_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= pendingFriendRequestsOutgoing_.GetHashCode();
      hash ^= pendingFriendRequestsIncoming_.GetHashCode();
      hash ^= friends_.GetHashCode();
      hash ^= ignored_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Token);
      }
      pendingFriendRequestsOutgoing_.WriteTo(output, _repeated_pendingFriendRequestsOutgoing_codec);
      pendingFriendRequestsIncoming_.WriteTo(output, _repeated_pendingFriendRequestsIncoming_codec);
      friends_.WriteTo(output, _repeated_friends_codec);
      ignored_.WriteTo(output, _repeated_ignored_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      size += pendingFriendRequestsOutgoing_.CalculateSize(_repeated_pendingFriendRequestsOutgoing_codec);
      size += pendingFriendRequestsIncoming_.CalculateSize(_repeated_pendingFriendRequestsIncoming_codec);
      size += friends_.CalculateSize(_repeated_friends_codec);
      size += ignored_.CalculateSize(_repeated_ignored_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_LoginResult other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      pendingFriendRequestsOutgoing_.Add(other.pendingFriendRequestsOutgoing_);
      pendingFriendRequestsIncoming_.Add(other.pendingFriendRequestsIncoming_);
      friends_.Add(other.friends_);
      ignored_.Add(other.ignored_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
          case 18: {
            Token = input.ReadBytes();
            break;
          }
          case 26: {
            pendingFriendRequestsOutgoing_.AddEntriesFrom(input, _repeated_pendingFriendRequestsOutgoing_codec);
            break;
          }
          case 34: {
            pendingFriendRequestsIncoming_.AddEntriesFrom(input, _repeated_pendingFriendRequestsIncoming_codec);
            break;
          }
          case 42: {
            friends_.AddEntriesFrom(input, _repeated_friends_codec);
            break;
          }
          case 50: {
            ignored_.AddEntriesFrom(input, _repeated_ignored_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendRequestAttempt : pb::IMessage<FriendRequestAttempt> {
    private static readonly pb::MessageParser<FriendRequestAttempt> _parser = new pb::MessageParser<FriendRequestAttempt>(() => new FriendRequestAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendRequestAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestAttempt(FriendRequestAttempt other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestAttempt Clone() {
      return new FriendRequestAttempt(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendRequestAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendRequestAttempt other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendRequestResult : pb::IMessage<FriendRequestResult> {
    private static readonly pb::MessageParser<FriendRequestResult> _parser = new pb::MessageParser<FriendRequestResult>(() => new FriendRequestResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendRequestResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestResult(FriendRequestResult other) : this() {
      isNowPending_ = other.isNowPending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendRequestResult Clone() {
      return new FriendRequestResult(this);
    }

    /// <summary>Field number for the "is_now_pending" field.</summary>
    public const int IsNowPendingFieldNumber = 1;
    private bool isNowPending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsNowPending {
      get { return isNowPending_; }
      set {
        isNowPending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendRequestResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendRequestResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsNowPending != other.IsNowPending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsNowPending != false) hash ^= IsNowPending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsNowPending != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsNowPending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsNowPending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendRequestResult other) {
      if (other == null) {
        return;
      }
      if (other.IsNowPending != false) {
        IsNowPending = other.IsNowPending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsNowPending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnswerFriendRequestAttempt : pb::IMessage<AnswerFriendRequestAttempt> {
    private static readonly pb::MessageParser<AnswerFriendRequestAttempt> _parser = new pb::MessageParser<AnswerFriendRequestAttempt>(() => new AnswerFriendRequestAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerFriendRequestAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerFriendRequestAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerFriendRequestAttempt(AnswerFriendRequestAttempt other) : this() {
      from_ = other.from_;
      accepted_ = other.accepted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerFriendRequestAttempt Clone() {
      return new AnswerFriendRequestAttempt(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private long from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "accepted" field.</summary>
    public const int AcceptedFieldNumber = 2;
    private bool accepted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accepted {
      get { return accepted_; }
      set {
        accepted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerFriendRequestAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerFriendRequestAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (Accepted != other.Accepted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From != 0L) hash ^= From.GetHashCode();
      if (Accepted != false) hash ^= Accepted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(From);
      }
      if (Accepted != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(From);
      }
      if (Accepted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerFriendRequestAttempt other) {
      if (other == null) {
        return;
      }
      if (other.From != 0L) {
        From = other.From;
      }
      if (other.Accepted != false) {
        Accepted = other.Accepted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            From = input.ReadInt64();
            break;
          }
          case 16: {
            Accepted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnswerFriendRequestResult : pb::IMessage<AnswerFriendRequestResult> {
    private static readonly pb::MessageParser<AnswerFriendRequestResult> _parser = new pb::MessageParser<AnswerFriendRequestResult>(() => new AnswerFriendRequestResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerFriendRequestResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerFriendRequestResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerFriendRequestResult(AnswerFriendRequestResult other) : this() {
      nowFriend_ = other.nowFriend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerFriendRequestResult Clone() {
      return new AnswerFriendRequestResult(this);
    }

    /// <summary>Field number for the "now_friend" field.</summary>
    public const int NowFriendFieldNumber = 1;
    private bool nowFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NowFriend {
      get { return nowFriend_; }
      set {
        nowFriend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerFriendRequestResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerFriendRequestResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NowFriend != other.NowFriend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NowFriend != false) hash ^= NowFriend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NowFriend != false) {
        output.WriteRawTag(8);
        output.WriteBool(NowFriend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NowFriend != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerFriendRequestResult other) {
      if (other == null) {
        return;
      }
      if (other.NowFriend != false) {
        NowFriend = other.NowFriend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NowFriend = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFriendAttempt : pb::IMessage<RemoveFriendAttempt> {
    private static readonly pb::MessageParser<RemoveFriendAttempt> _parser = new pb::MessageParser<RemoveFriendAttempt>(() => new RemoveFriendAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFriendAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendAttempt(RemoveFriendAttempt other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendAttempt Clone() {
      return new RemoveFriendAttempt(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFriendAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFriendAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFriendAttempt other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RemoveFriendResult : pb::IMessage<RemoveFriendResult> {
    private static readonly pb::MessageParser<RemoveFriendResult> _parser = new pb::MessageParser<RemoveFriendResult>(() => new RemoveFriendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFriendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendResult(RemoveFriendResult other) : this() {
      noLongerFriend_ = other.noLongerFriend_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFriendResult Clone() {
      return new RemoveFriendResult(this);
    }

    /// <summary>Field number for the "no_longer_friend" field.</summary>
    public const int NoLongerFriendFieldNumber = 1;
    private bool noLongerFriend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NoLongerFriend {
      get { return noLongerFriend_; }
      set {
        noLongerFriend_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFriendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFriendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NoLongerFriend != other.NoLongerFriend) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NoLongerFriend != false) hash ^= NoLongerFriend.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NoLongerFriend != false) {
        output.WriteRawTag(8);
        output.WriteBool(NoLongerFriend);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NoLongerFriend != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFriendResult other) {
      if (other == null) {
        return;
      }
      if (other.NoLongerFriend != false) {
        NoLongerFriend = other.NoLongerFriend;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NoLongerFriend = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_FriendRequest : pb::IMessage<Event_FriendRequest> {
    private static readonly pb::MessageParser<Event_FriendRequest> _parser = new pb::MessageParser<Event_FriendRequest>(() => new Event_FriendRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_FriendRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendRequest(Event_FriendRequest other) : this() {
      BasicPlayerInfo = other.basicPlayerInfo_ != null ? other.BasicPlayerInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendRequest Clone() {
      return new Event_FriendRequest(this);
    }

    /// <summary>Field number for the "basic_player_info" field.</summary>
    public const int BasicPlayerInfoFieldNumber = 1;
    private global::MainServerV2.BasicPlayerInfo basicPlayerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo BasicPlayerInfo {
      get { return basicPlayerInfo_; }
      set {
        basicPlayerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_FriendRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_FriendRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BasicPlayerInfo, other.BasicPlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (basicPlayerInfo_ != null) hash ^= BasicPlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (basicPlayerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BasicPlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (basicPlayerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BasicPlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_FriendRequest other) {
      if (other == null) {
        return;
      }
      if (other.basicPlayerInfo_ != null) {
        if (basicPlayerInfo_ == null) {
          basicPlayerInfo_ = new global::MainServerV2.BasicPlayerInfo();
        }
        BasicPlayerInfo.MergeFrom(other.BasicPlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (basicPlayerInfo_ == null) {
              basicPlayerInfo_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(basicPlayerInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_FriendAcceptedRequest : pb::IMessage<Event_FriendAcceptedRequest> {
    private static readonly pb::MessageParser<Event_FriendAcceptedRequest> _parser = new pb::MessageParser<Event_FriendAcceptedRequest>(() => new Event_FriendAcceptedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_FriendAcceptedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendAcceptedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendAcceptedRequest(Event_FriendAcceptedRequest other) : this() {
      PlayerInfo = other.playerInfo_ != null ? other.PlayerInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendAcceptedRequest Clone() {
      return new Event_FriendAcceptedRequest(this);
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::MainServerV2.BasicPlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_FriendAcceptedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_FriendAcceptedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_FriendAcceptedRequest other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          playerInfo_ = new global::MainServerV2.BasicPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              playerInfo_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(playerInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_FriendRemovedYou : pb::IMessage<Event_FriendRemovedYou> {
    private static readonly pb::MessageParser<Event_FriendRemovedYou> _parser = new pb::MessageParser<Event_FriendRemovedYou>(() => new Event_FriendRemovedYou());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_FriendRemovedYou> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendRemovedYou() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendRemovedYou(Event_FriendRemovedYou other) : this() {
      PlayerInfo = other.playerInfo_ != null ? other.PlayerInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendRemovedYou Clone() {
      return new Event_FriendRemovedYou(this);
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::MainServerV2.BasicPlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_FriendRemovedYou);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_FriendRemovedYou other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_FriendRemovedYou other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          playerInfo_ = new global::MainServerV2.BasicPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              playerInfo_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(playerInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_FriendOnlineStateChanged : pb::IMessage<Event_FriendOnlineStateChanged> {
    private static readonly pb::MessageParser<Event_FriendOnlineStateChanged> _parser = new pb::MessageParser<Event_FriendOnlineStateChanged>(() => new Event_FriendOnlineStateChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_FriendOnlineStateChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendOnlineStateChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendOnlineStateChanged(Event_FriendOnlineStateChanged other) : this() {
      playerId_ = other.playerId_;
      onlineState_ = other.onlineState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_FriendOnlineStateChanged Clone() {
      return new Event_FriendOnlineStateChanged(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "online_state" field.</summary>
    public const int OnlineStateFieldNumber = 2;
    private global::MainServerV2.OnlineState onlineState_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.OnlineState OnlineState {
      get { return onlineState_; }
      set {
        onlineState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_FriendOnlineStateChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_FriendOnlineStateChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (OnlineState != other.OnlineState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (OnlineState != 0) hash ^= OnlineState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (OnlineState != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) OnlineState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (OnlineState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OnlineState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_FriendOnlineStateChanged other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      if (other.OnlineState != 0) {
        OnlineState = other.OnlineState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
          case 16: {
            onlineState_ = (global::MainServerV2.OnlineState) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IgnorePlayerAttempt : pb::IMessage<IgnorePlayerAttempt> {
    private static readonly pb::MessageParser<IgnorePlayerAttempt> _parser = new pb::MessageParser<IgnorePlayerAttempt>(() => new IgnorePlayerAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IgnorePlayerAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnorePlayerAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnorePlayerAttempt(IgnorePlayerAttempt other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnorePlayerAttempt Clone() {
      return new IgnorePlayerAttempt(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IgnorePlayerAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IgnorePlayerAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IgnorePlayerAttempt other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IgnorePlayerResult : pb::IMessage<IgnorePlayerResult> {
    private static readonly pb::MessageParser<IgnorePlayerResult> _parser = new pb::MessageParser<IgnorePlayerResult>(() => new IgnorePlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IgnorePlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnorePlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnorePlayerResult(IgnorePlayerResult other) : this() {
      isIgnored_ = other.isIgnored_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IgnorePlayerResult Clone() {
      return new IgnorePlayerResult(this);
    }

    /// <summary>Field number for the "is_ignored" field.</summary>
    public const int IsIgnoredFieldNumber = 1;
    private bool isIgnored_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIgnored {
      get { return isIgnored_; }
      set {
        isIgnored_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IgnorePlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IgnorePlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsIgnored != other.IsIgnored) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsIgnored != false) hash ^= IsIgnored.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsIgnored != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsIgnored);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsIgnored != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IgnorePlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.IsIgnored != false) {
        IsIgnored = other.IsIgnored;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsIgnored = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnIgnorePlayerAttempt : pb::IMessage<UnIgnorePlayerAttempt> {
    private static readonly pb::MessageParser<UnIgnorePlayerAttempt> _parser = new pb::MessageParser<UnIgnorePlayerAttempt>(() => new UnIgnorePlayerAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnIgnorePlayerAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnIgnorePlayerAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnIgnorePlayerAttempt(UnIgnorePlayerAttempt other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnIgnorePlayerAttempt Clone() {
      return new UnIgnorePlayerAttempt(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnIgnorePlayerAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnIgnorePlayerAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnIgnorePlayerAttempt other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnIgnorePlayerResult : pb::IMessage<UnIgnorePlayerResult> {
    private static readonly pb::MessageParser<UnIgnorePlayerResult> _parser = new pb::MessageParser<UnIgnorePlayerResult>(() => new UnIgnorePlayerResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnIgnorePlayerResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnIgnorePlayerResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnIgnorePlayerResult(UnIgnorePlayerResult other) : this() {
      isIgnored_ = other.isIgnored_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnIgnorePlayerResult Clone() {
      return new UnIgnorePlayerResult(this);
    }

    /// <summary>Field number for the "is_ignored" field.</summary>
    public const int IsIgnoredFieldNumber = 1;
    private bool isIgnored_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIgnored {
      get { return isIgnored_; }
      set {
        isIgnored_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnIgnorePlayerResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnIgnorePlayerResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsIgnored != other.IsIgnored) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsIgnored != false) hash ^= IsIgnored.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsIgnored != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsIgnored);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsIgnored != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnIgnorePlayerResult other) {
      if (other == null) {
        return;
      }
      if (other.IsIgnored != false) {
        IsIgnored = other.IsIgnored;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsIgnored = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteToGroupAttempt : pb::IMessage<InviteToGroupAttempt> {
    private static readonly pb::MessageParser<InviteToGroupAttempt> _parser = new pb::MessageParser<InviteToGroupAttempt>(() => new InviteToGroupAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteToGroupAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteToGroupAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteToGroupAttempt(InviteToGroupAttempt other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteToGroupAttempt Clone() {
      return new InviteToGroupAttempt(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteToGroupAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteToGroupAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteToGroupAttempt other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteToGroupResult : pb::IMessage<InviteToGroupResult> {
    private static readonly pb::MessageParser<InviteToGroupResult> _parser = new pb::MessageParser<InviteToGroupResult>(() => new InviteToGroupResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteToGroupResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteToGroupResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteToGroupResult(InviteToGroupResult other) : this() {
      invitedToGroup_ = other.invitedToGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteToGroupResult Clone() {
      return new InviteToGroupResult(this);
    }

    /// <summary>Field number for the "invited_to_group" field.</summary>
    public const int InvitedToGroupFieldNumber = 1;
    private bool invitedToGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InvitedToGroup {
      get { return invitedToGroup_; }
      set {
        invitedToGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteToGroupResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteToGroupResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InvitedToGroup != other.InvitedToGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InvitedToGroup != false) hash ^= InvitedToGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InvitedToGroup != false) {
        output.WriteRawTag(8);
        output.WriteBool(InvitedToGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InvitedToGroup != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteToGroupResult other) {
      if (other == null) {
        return;
      }
      if (other.InvitedToGroup != false) {
        InvitedToGroup = other.InvitedToGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InvitedToGroup = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnswerGroupInviteAttempt : pb::IMessage<AnswerGroupInviteAttempt> {
    private static readonly pb::MessageParser<AnswerGroupInviteAttempt> _parser = new pb::MessageParser<AnswerGroupInviteAttempt>(() => new AnswerGroupInviteAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerGroupInviteAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerGroupInviteAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerGroupInviteAttempt(AnswerGroupInviteAttempt other) : this() {
      accepted_ = other.accepted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerGroupInviteAttempt Clone() {
      return new AnswerGroupInviteAttempt(this);
    }

    /// <summary>Field number for the "accepted" field.</summary>
    public const int AcceptedFieldNumber = 1;
    private bool accepted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accepted {
      get { return accepted_; }
      set {
        accepted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerGroupInviteAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerGroupInviteAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Accepted != other.Accepted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Accepted != false) hash ^= Accepted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Accepted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Accepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Accepted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerGroupInviteAttempt other) {
      if (other == null) {
        return;
      }
      if (other.Accepted != false) {
        Accepted = other.Accepted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Accepted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnswerGroupInviteResult : pb::IMessage<AnswerGroupInviteResult> {
    private static readonly pb::MessageParser<AnswerGroupInviteResult> _parser = new pb::MessageParser<AnswerGroupInviteResult>(() => new AnswerGroupInviteResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnswerGroupInviteResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerGroupInviteResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerGroupInviteResult(AnswerGroupInviteResult other) : this() {
      inGroup_ = other.inGroup_;
      Leader = other.leader_ != null ? other.Leader.Clone() : null;
      playersInGroup_ = other.playersInGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnswerGroupInviteResult Clone() {
      return new AnswerGroupInviteResult(this);
    }

    /// <summary>Field number for the "in_group" field.</summary>
    public const int InGroupFieldNumber = 1;
    private bool inGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InGroup {
      get { return inGroup_; }
      set {
        inGroup_ = value;
      }
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 2;
    private global::MainServerV2.BasicPlayerInfo leader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo Leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    /// <summary>Field number for the "players_in_group" field.</summary>
    public const int PlayersInGroupFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MainServerV2.BasicPlayerInfo> _repeated_playersInGroup_codec
        = pb::FieldCodec.ForMessage(26, global::MainServerV2.BasicPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> playersInGroup_ = new pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> PlayersInGroup {
      get { return playersInGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnswerGroupInviteResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnswerGroupInviteResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InGroup != other.InGroup) return false;
      if (!object.Equals(Leader, other.Leader)) return false;
      if(!playersInGroup_.Equals(other.playersInGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InGroup != false) hash ^= InGroup.GetHashCode();
      if (leader_ != null) hash ^= Leader.GetHashCode();
      hash ^= playersInGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InGroup != false) {
        output.WriteRawTag(8);
        output.WriteBool(InGroup);
      }
      if (leader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Leader);
      }
      playersInGroup_.WriteTo(output, _repeated_playersInGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InGroup != false) {
        size += 1 + 1;
      }
      if (leader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leader);
      }
      size += playersInGroup_.CalculateSize(_repeated_playersInGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnswerGroupInviteResult other) {
      if (other == null) {
        return;
      }
      if (other.InGroup != false) {
        InGroup = other.InGroup;
      }
      if (other.leader_ != null) {
        if (leader_ == null) {
          leader_ = new global::MainServerV2.BasicPlayerInfo();
        }
        Leader.MergeFrom(other.Leader);
      }
      playersInGroup_.Add(other.playersInGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InGroup = input.ReadBool();
            break;
          }
          case 18: {
            if (leader_ == null) {
              leader_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(leader_);
            break;
          }
          case 26: {
            playersInGroup_.AddEntriesFrom(input, _repeated_playersInGroup_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveGroupAttempt : pb::IMessage<LeaveGroupAttempt> {
    private static readonly pb::MessageParser<LeaveGroupAttempt> _parser = new pb::MessageParser<LeaveGroupAttempt>(() => new LeaveGroupAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveGroupAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveGroupAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveGroupAttempt(LeaveGroupAttempt other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveGroupAttempt Clone() {
      return new LeaveGroupAttempt(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveGroupAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveGroupAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveGroupAttempt other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LeaveGroupResult : pb::IMessage<LeaveGroupResult> {
    private static readonly pb::MessageParser<LeaveGroupResult> _parser = new pb::MessageParser<LeaveGroupResult>(() => new LeaveGroupResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveGroupResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveGroupResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveGroupResult(LeaveGroupResult other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveGroupResult Clone() {
      return new LeaveGroupResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveGroupResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveGroupResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveGroupResult other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Event_GotGroupInvite : pb::IMessage<Event_GotGroupInvite> {
    private static readonly pb::MessageParser<Event_GotGroupInvite> _parser = new pb::MessageParser<Event_GotGroupInvite>(() => new Event_GotGroupInvite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_GotGroupInvite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GotGroupInvite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GotGroupInvite(Event_GotGroupInvite other) : this() {
      FromPlayer = other.fromPlayer_ != null ? other.FromPlayer.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GotGroupInvite Clone() {
      return new Event_GotGroupInvite(this);
    }

    /// <summary>Field number for the "from_player" field.</summary>
    public const int FromPlayerFieldNumber = 1;
    private global::MainServerV2.BasicPlayerInfo fromPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo FromPlayer {
      get { return fromPlayer_; }
      set {
        fromPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_GotGroupInvite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_GotGroupInvite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FromPlayer, other.FromPlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (fromPlayer_ != null) hash ^= FromPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (fromPlayer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FromPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (fromPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromPlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_GotGroupInvite other) {
      if (other == null) {
        return;
      }
      if (other.fromPlayer_ != null) {
        if (fromPlayer_ == null) {
          fromPlayer_ = new global::MainServerV2.BasicPlayerInfo();
        }
        FromPlayer.MergeFrom(other.FromPlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fromPlayer_ == null) {
              fromPlayer_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(fromPlayer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_PlayerAnsweredGroupInvite : pb::IMessage<Event_PlayerAnsweredGroupInvite> {
    private static readonly pb::MessageParser<Event_PlayerAnsweredGroupInvite> _parser = new pb::MessageParser<Event_PlayerAnsweredGroupInvite>(() => new Event_PlayerAnsweredGroupInvite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_PlayerAnsweredGroupInvite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_PlayerAnsweredGroupInvite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_PlayerAnsweredGroupInvite(Event_PlayerAnsweredGroupInvite other) : this() {
      Player = other.player_ != null ? other.Player.Clone() : null;
      accepted_ = other.accepted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_PlayerAnsweredGroupInvite Clone() {
      return new Event_PlayerAnsweredGroupInvite(this);
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::MainServerV2.BasicPlayerInfo player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "Accepted" field.</summary>
    public const int AcceptedFieldNumber = 2;
    private bool accepted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accepted {
      get { return accepted_; }
      set {
        accepted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_PlayerAnsweredGroupInvite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_PlayerAnsweredGroupInvite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (Accepted != other.Accepted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (Accepted != false) hash ^= Accepted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (Accepted != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accepted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (Accepted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_PlayerAnsweredGroupInvite other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          player_ = new global::MainServerV2.BasicPlayerInfo();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.Accepted != false) {
        Accepted = other.Accepted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              player_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(player_);
            break;
          }
          case 16: {
            Accepted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_PlayerLeftGroup : pb::IMessage<Event_PlayerLeftGroup> {
    private static readonly pb::MessageParser<Event_PlayerLeftGroup> _parser = new pb::MessageParser<Event_PlayerLeftGroup>(() => new Event_PlayerLeftGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_PlayerLeftGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_PlayerLeftGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_PlayerLeftGroup(Event_PlayerLeftGroup other) : this() {
      PlayerLeaving = other.playerLeaving_ != null ? other.PlayerLeaving.Clone() : null;
      NewLeader = other.newLeader_ != null ? other.NewLeader.Clone() : null;
      currentPlayers_ = other.currentPlayers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_PlayerLeftGroup Clone() {
      return new Event_PlayerLeftGroup(this);
    }

    /// <summary>Field number for the "player_leaving" field.</summary>
    public const int PlayerLeavingFieldNumber = 1;
    private global::MainServerV2.BasicPlayerInfo playerLeaving_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo PlayerLeaving {
      get { return playerLeaving_; }
      set {
        playerLeaving_ = value;
      }
    }

    /// <summary>Field number for the "new_leader" field.</summary>
    public const int NewLeaderFieldNumber = 2;
    private global::MainServerV2.BasicPlayerInfo newLeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo NewLeader {
      get { return newLeader_; }
      set {
        newLeader_ = value;
      }
    }

    /// <summary>Field number for the "current_players" field.</summary>
    public const int CurrentPlayersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::MainServerV2.BasicPlayerInfo> _repeated_currentPlayers_codec
        = pb::FieldCodec.ForMessage(26, global::MainServerV2.BasicPlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> currentPlayers_ = new pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::MainServerV2.BasicPlayerInfo> CurrentPlayers {
      get { return currentPlayers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_PlayerLeftGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_PlayerLeftGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerLeaving, other.PlayerLeaving)) return false;
      if (!object.Equals(NewLeader, other.NewLeader)) return false;
      if(!currentPlayers_.Equals(other.currentPlayers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerLeaving_ != null) hash ^= PlayerLeaving.GetHashCode();
      if (newLeader_ != null) hash ^= NewLeader.GetHashCode();
      hash ^= currentPlayers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerLeaving_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerLeaving);
      }
      if (newLeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NewLeader);
      }
      currentPlayers_.WriteTo(output, _repeated_currentPlayers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerLeaving_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerLeaving);
      }
      if (newLeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewLeader);
      }
      size += currentPlayers_.CalculateSize(_repeated_currentPlayers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_PlayerLeftGroup other) {
      if (other == null) {
        return;
      }
      if (other.playerLeaving_ != null) {
        if (playerLeaving_ == null) {
          playerLeaving_ = new global::MainServerV2.BasicPlayerInfo();
        }
        PlayerLeaving.MergeFrom(other.PlayerLeaving);
      }
      if (other.newLeader_ != null) {
        if (newLeader_ == null) {
          newLeader_ = new global::MainServerV2.BasicPlayerInfo();
        }
        NewLeader.MergeFrom(other.NewLeader);
      }
      currentPlayers_.Add(other.currentPlayers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerLeaving_ == null) {
              playerLeaving_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(playerLeaving_);
            break;
          }
          case 18: {
            if (newLeader_ == null) {
              newLeader_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(newLeader_);
            break;
          }
          case 26: {
            currentPlayers_.AddEntriesFrom(input, _repeated_currentPlayers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_GroupInviteTimedOut : pb::IMessage<Event_GroupInviteTimedOut> {
    private static readonly pb::MessageParser<Event_GroupInviteTimedOut> _parser = new pb::MessageParser<Event_GroupInviteTimedOut>(() => new Event_GroupInviteTimedOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_GroupInviteTimedOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupInviteTimedOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupInviteTimedOut(Event_GroupInviteTimedOut other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupInviteTimedOut Clone() {
      return new Event_GroupInviteTimedOut(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_GroupInviteTimedOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_GroupInviteTimedOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_GroupInviteTimedOut other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SendMessageAttempt : pb::IMessage<SendMessageAttempt> {
    private static readonly pb::MessageParser<SendMessageAttempt> _parser = new pb::MessageParser<SendMessageAttempt>(() => new SendMessageAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageAttempt(SendMessageAttempt other) : this() {
      msg_ = other.msg_;
      switch (other.TargetCase) {
        case TargetOneofCase.FriendTarget:
          FriendTarget = other.FriendTarget.Clone();
          break;
        case TargetOneofCase.GroupTarget:
          GroupTarget = other.GroupTarget.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageAttempt Clone() {
      return new SendMessageAttempt(this);
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 1;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friend_target" field.</summary>
    public const int FriendTargetFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.FriendTarget FriendTarget {
      get { return targetCase_ == TargetOneofCase.FriendTarget ? (global::MainServerV2.FriendTarget) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.FriendTarget;
      }
    }

    /// <summary>Field number for the "group_target" field.</summary>
    public const int GroupTargetFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.GroupTarget GroupTarget {
      get { return targetCase_ == TargetOneofCase.GroupTarget ? (global::MainServerV2.GroupTarget) target_ : null; }
      set {
        target_ = value;
        targetCase_ = value == null ? TargetOneofCase.None : TargetOneofCase.GroupTarget;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      FriendTarget = 2,
      GroupTarget = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msg != other.Msg) return false;
      if (!object.Equals(FriendTarget, other.FriendTarget)) return false;
      if (!object.Equals(GroupTarget, other.GroupTarget)) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (targetCase_ == TargetOneofCase.FriendTarget) hash ^= FriendTarget.GetHashCode();
      if (targetCase_ == TargetOneofCase.GroupTarget) hash ^= GroupTarget.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Msg);
      }
      if (targetCase_ == TargetOneofCase.FriendTarget) {
        output.WriteRawTag(18);
        output.WriteMessage(FriendTarget);
      }
      if (targetCase_ == TargetOneofCase.GroupTarget) {
        output.WriteRawTag(26);
        output.WriteMessage(GroupTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (targetCase_ == TargetOneofCase.FriendTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendTarget);
      }
      if (targetCase_ == TargetOneofCase.GroupTarget) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupTarget);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageAttempt other) {
      if (other == null) {
        return;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.FriendTarget:
          if (FriendTarget == null) {
            FriendTarget = new global::MainServerV2.FriendTarget();
          }
          FriendTarget.MergeFrom(other.FriendTarget);
          break;
        case TargetOneofCase.GroupTarget:
          if (GroupTarget == null) {
            GroupTarget = new global::MainServerV2.GroupTarget();
          }
          GroupTarget.MergeFrom(other.GroupTarget);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Msg = input.ReadString();
            break;
          }
          case 18: {
            global::MainServerV2.FriendTarget subBuilder = new global::MainServerV2.FriendTarget();
            if (targetCase_ == TargetOneofCase.FriendTarget) {
              subBuilder.MergeFrom(FriendTarget);
            }
            input.ReadMessage(subBuilder);
            FriendTarget = subBuilder;
            break;
          }
          case 26: {
            global::MainServerV2.GroupTarget subBuilder = new global::MainServerV2.GroupTarget();
            if (targetCase_ == TargetOneofCase.GroupTarget) {
              subBuilder.MergeFrom(GroupTarget);
            }
            input.ReadMessage(subBuilder);
            GroupTarget = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class FriendTarget : pb::IMessage<FriendTarget> {
    private static readonly pb::MessageParser<FriendTarget> _parser = new pb::MessageParser<FriendTarget>(() => new FriendTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendTarget(FriendTarget other) : this() {
      playerId_ = other.playerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendTarget Clone() {
      return new FriendTarget(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private long playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0L) hash ^= PlayerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendTarget other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0L) {
        PlayerId = other.PlayerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GroupTarget : pb::IMessage<GroupTarget> {
    private static readonly pb::MessageParser<GroupTarget> _parser = new pb::MessageParser<GroupTarget>(() => new GroupTarget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupTarget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupTarget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupTarget(GroupTarget other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupTarget Clone() {
      return new GroupTarget(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupTarget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupTarget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupTarget other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SendMessageResult : pb::IMessage<SendMessageResult> {
    private static readonly pb::MessageParser<SendMessageResult> _parser = new pb::MessageParser<SendMessageResult>(() => new SendMessageResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendMessageResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResult(SendMessageResult other) : this() {
      sentMessage_ = other.sentMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendMessageResult Clone() {
      return new SendMessageResult(this);
    }

    /// <summary>Field number for the "sent_message" field.</summary>
    public const int SentMessageFieldNumber = 1;
    private bool sentMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SentMessage {
      get { return sentMessage_; }
      set {
        sentMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendMessageResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendMessageResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SentMessage != other.SentMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SentMessage != false) hash ^= SentMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SentMessage != false) {
        output.WriteRawTag(8);
        output.WriteBool(SentMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SentMessage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendMessageResult other) {
      if (other == null) {
        return;
      }
      if (other.SentMessage != false) {
        SentMessage = other.SentMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SentMessage = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_ReceivedMessage : pb::IMessage<Event_ReceivedMessage> {
    private static readonly pb::MessageParser<Event_ReceivedMessage> _parser = new pb::MessageParser<Event_ReceivedMessage>(() => new Event_ReceivedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_ReceivedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_ReceivedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_ReceivedMessage(Event_ReceivedMessage other) : this() {
      msg_ = other.msg_;
      msgType_ = other.msgType_;
      FromPlayer = other.fromPlayer_ != null ? other.FromPlayer.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_ReceivedMessage Clone() {
      return new Event_ReceivedMessage(this);
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 1;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "msg_type" field.</summary>
    public const int MsgTypeFieldNumber = 2;
    private global::MainServerV2.MessageType msgType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.MessageType MsgType {
      get { return msgType_; }
      set {
        msgType_ = value;
      }
    }

    /// <summary>Field number for the "from_player" field.</summary>
    public const int FromPlayerFieldNumber = 3;
    private global::MainServerV2.BasicPlayerInfo fromPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.BasicPlayerInfo FromPlayer {
      get { return fromPlayer_; }
      set {
        fromPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_ReceivedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_ReceivedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msg != other.Msg) return false;
      if (MsgType != other.MsgType) return false;
      if (!object.Equals(FromPlayer, other.FromPlayer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (MsgType != 0) hash ^= MsgType.GetHashCode();
      if (fromPlayer_ != null) hash ^= FromPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Msg.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Msg);
      }
      if (MsgType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MsgType);
      }
      if (fromPlayer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FromPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (MsgType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MsgType);
      }
      if (fromPlayer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromPlayer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_ReceivedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      if (other.MsgType != 0) {
        MsgType = other.MsgType;
      }
      if (other.fromPlayer_ != null) {
        if (fromPlayer_ == null) {
          fromPlayer_ = new global::MainServerV2.BasicPlayerInfo();
        }
        FromPlayer.MergeFrom(other.FromPlayer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Msg = input.ReadString();
            break;
          }
          case 16: {
            msgType_ = (global::MainServerV2.MessageType) input.ReadEnum();
            break;
          }
          case 26: {
            if (fromPlayer_ == null) {
              fromPlayer_ = new global::MainServerV2.BasicPlayerInfo();
            }
            input.ReadMessage(fromPlayer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueAttempt : pb::IMessage<QueueAttempt> {
    private static readonly pb::MessageParser<QueueAttempt> _parser = new pb::MessageParser<QueueAttempt>(() => new QueueAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueAttempt(QueueAttempt other) : this() {
      matchMode_ = other.matchMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueAttempt Clone() {
      return new QueueAttempt(this);
    }

    /// <summary>Field number for the "match_mode" field.</summary>
    public const int MatchModeFieldNumber = 1;
    private global::MainServerV2.MatchMode matchMode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.MatchMode MatchMode {
      get { return matchMode_; }
      set {
        matchMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatchMode != other.MatchMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatchMode != 0) hash ^= MatchMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MatchMode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MatchMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatchMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueAttempt other) {
      if (other == null) {
        return;
      }
      if (other.MatchMode != 0) {
        MatchMode = other.MatchMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            matchMode_ = (global::MainServerV2.MatchMode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueResult : pb::IMessage<QueueResult> {
    private static readonly pb::MessageParser<QueueResult> _parser = new pb::MessageParser<QueueResult>(() => new QueueResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueResult(QueueResult other) : this() {
      queued_ = other.queued_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueResult Clone() {
      return new QueueResult(this);
    }

    /// <summary>Field number for the "queued" field.</summary>
    public const int QueuedFieldNumber = 1;
    private bool queued_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Queued {
      get { return queued_; }
      set {
        queued_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queued != other.Queued) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queued != false) hash ^= Queued.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queued != false) {
        output.WriteRawTag(8);
        output.WriteBool(Queued);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queued != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueResult other) {
      if (other == null) {
        return;
      }
      if (other.Queued != false) {
        Queued = other.Queued;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Queued = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaveQueueAttempt : pb::IMessage<LeaveQueueAttempt> {
    private static readonly pb::MessageParser<LeaveQueueAttempt> _parser = new pb::MessageParser<LeaveQueueAttempt>(() => new LeaveQueueAttempt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveQueueAttempt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveQueueAttempt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveQueueAttempt(LeaveQueueAttempt other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveQueueAttempt Clone() {
      return new LeaveQueueAttempt(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveQueueAttempt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveQueueAttempt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveQueueAttempt other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LeaveQueueResult : pb::IMessage<LeaveQueueResult> {
    private static readonly pb::MessageParser<LeaveQueueResult> _parser = new pb::MessageParser<LeaveQueueResult>(() => new LeaveQueueResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveQueueResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveQueueResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveQueueResult(LeaveQueueResult other) : this() {
      notInQueue_ = other.notInQueue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveQueueResult Clone() {
      return new LeaveQueueResult(this);
    }

    /// <summary>Field number for the "not_in_queue" field.</summary>
    public const int NotInQueueFieldNumber = 1;
    private bool notInQueue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NotInQueue {
      get { return notInQueue_; }
      set {
        notInQueue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveQueueResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveQueueResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NotInQueue != other.NotInQueue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NotInQueue != false) hash ^= NotInQueue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NotInQueue != false) {
        output.WriteRawTag(8);
        output.WriteBool(NotInQueue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NotInQueue != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveQueueResult other) {
      if (other == null) {
        return;
      }
      if (other.NotInQueue != false) {
        NotInQueue = other.NotInQueue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NotInQueue = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_GroupQueueStateChanged : pb::IMessage<Event_GroupQueueStateChanged> {
    private static readonly pb::MessageParser<Event_GroupQueueStateChanged> _parser = new pb::MessageParser<Event_GroupQueueStateChanged>(() => new Event_GroupQueueStateChanged());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_GroupQueueStateChanged> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupQueueStateChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupQueueStateChanged(Event_GroupQueueStateChanged other) : this() {
      queued_ = other.queued_;
      matchMode_ = other.matchMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupQueueStateChanged Clone() {
      return new Event_GroupQueueStateChanged(this);
    }

    /// <summary>Field number for the "queued" field.</summary>
    public const int QueuedFieldNumber = 1;
    private bool queued_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Queued {
      get { return queued_; }
      set {
        queued_ = value;
      }
    }

    /// <summary>Field number for the "match_mode" field.</summary>
    public const int MatchModeFieldNumber = 2;
    private global::MainServerV2.MatchMode matchMode_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MainServerV2.MatchMode MatchMode {
      get { return matchMode_; }
      set {
        matchMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_GroupQueueStateChanged);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_GroupQueueStateChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queued != other.Queued) return false;
      if (MatchMode != other.MatchMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queued != false) hash ^= Queued.GetHashCode();
      if (MatchMode != 0) hash ^= MatchMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queued != false) {
        output.WriteRawTag(8);
        output.WriteBool(Queued);
      }
      if (MatchMode != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MatchMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queued != false) {
        size += 1 + 1;
      }
      if (MatchMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MatchMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_GroupQueueStateChanged other) {
      if (other == null) {
        return;
      }
      if (other.Queued != false) {
        Queued = other.Queued;
      }
      if (other.MatchMode != 0) {
        MatchMode = other.MatchMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Queued = input.ReadBool();
            break;
          }
          case 16: {
            matchMode_ = (global::MainServerV2.MatchMode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event_GroupDequeued : pb::IMessage<Event_GroupDequeued> {
    private static readonly pb::MessageParser<Event_GroupDequeued> _parser = new pb::MessageParser<Event_GroupDequeued>(() => new Event_GroupDequeued());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_GroupDequeued> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupDequeued() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupDequeued(Event_GroupDequeued other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_GroupDequeued Clone() {
      return new Event_GroupDequeued(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_GroupDequeued);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_GroupDequeued other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_GroupDequeued other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Event_QueuePopped : pb::IMessage<Event_QueuePopped> {
    private static readonly pb::MessageParser<Event_QueuePopped> _parser = new pb::MessageParser<Event_QueuePopped>(() => new Event_QueuePopped());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event_QueuePopped> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MainServerV2.Mainserverv2Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_QueuePopped() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_QueuePopped(Event_QueuePopped other) : this() {
      authToken_ = other.authToken_;
      connectionStr_ = other.connectionStr_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event_QueuePopped Clone() {
      return new Event_QueuePopped(this);
    }

    /// <summary>Field number for the "auth_token" field.</summary>
    public const int AuthTokenFieldNumber = 1;
    private pb::ByteString authToken_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AuthToken {
      get { return authToken_; }
      set {
        authToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection_str" field.</summary>
    public const int ConnectionStrFieldNumber = 2;
    private string connectionStr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionStr {
      get { return connectionStr_; }
      set {
        connectionStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event_QueuePopped);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event_QueuePopped other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AuthToken != other.AuthToken) return false;
      if (ConnectionStr != other.ConnectionStr) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AuthToken.Length != 0) hash ^= AuthToken.GetHashCode();
      if (ConnectionStr.Length != 0) hash ^= ConnectionStr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AuthToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AuthToken);
      }
      if (ConnectionStr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AuthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AuthToken);
      }
      if (ConnectionStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionStr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event_QueuePopped other) {
      if (other == null) {
        return;
      }
      if (other.AuthToken.Length != 0) {
        AuthToken = other.AuthToken;
      }
      if (other.ConnectionStr.Length != 0) {
        ConnectionStr = other.ConnectionStr;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AuthToken = input.ReadBytes();
            break;
          }
          case 18: {
            ConnectionStr = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
